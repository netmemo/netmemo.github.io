[{"authors":[],"categories":[],"content":" Maximum path In the RIB + FIB ECMP (multipath)\nIs PIC supported by default ?\nhttps://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_bgp/configuration/xe-3s/irg-xe-3s-book/irg-bgp-mp-pic.html\n=\u0026gt; With BGP Multipath, the BGP prefix-independant convergence (PIC) feature is supported\n Attribut that should be identical \n- Weight\n- LP\n- AS Path (AS Number unless relax us used, AS length)\n- Origin Code\n- MED\n- IGP Metric Next hop should be different\nAdd Path If the path are equal, allow to advertise more than one bes oath (need to test in eBGP).\nMostly used with BGP without MPLS. If MPLS is used it\u0026rsquo;s better to have an RD different for each VRF of each router (easier to troubleshoot).\nhttps://orhanergun.net/wp-content/uploads/2019/11/BGP-Add-path-vs-Shadow-RR-vs-Shadow-Session-vs-Unique-RD.pdf\nPIC https://www.ciscolive.com/c/dam/r/ciscolive/us/docs/2016/pdf/BRKRST-3321.pdf I don\u0026rsquo;t neded it at the moment because we don\u0026rsquo;t need this level if convergence (couple of minutes vs ms if you have hundres of thousand of prefixes)\nhttps://blog.ipspace.net/2012/01/prefix-independent-convergence-pic.html\nThe generic optimization of the RIB-to-FIB update process is known as Prefix-Independent Convergence (PIC) - if the routing protocols can pre-compute alternate paths, suitably designed FIB can use that information to cache alternate next hops. Updating such a FIB no longer involves numerous updates to individual prefixes; you have to change only the next hop reachability information.\nBest External Allow a router to advertise it\u0026rsquo;s best external path even if in it\u0026rsquo;s BGP table it does have a beter route from inside\nLABEL ALLOCATION Per VRF  Cons \n- IP Lookup needed after label lookup (can be a benefit, cf route sum issue)\n- No granular load balancing because the bottom label is the same for all prefixes, if platform load balances on bottom label\n- Potential forwarding loop during local traffic diversion to support PIC (Transient loop)\n- No support for EIBGP multipath\n Pros \n- 1 label per vrf (less label used)\nPer CE  Cons \n- No granular load balancing because the bottom label is the same for all prefixes from one CE, if platform load balances on bottom label\n- eBGPload balancing \u0026amp; BGP PIC is not supported (it makes usage of label diversity), unless resilient per-ce label\n- Only single hop eBGPsupported, no multihop\n Pros \n- No IP lookup needed after label lookup\n- Per-CE : one MPLS label per next-hop (so per connected CE router)(Number of MPLS labels used is very low)\n","date":1589176941,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589176941,"objectID":"b539297dbff77ad990caec0ccd889e01","permalink":"https://netmemo.github.io/post/bgp-multipath/","publishdate":"2020-05-11T08:02:21+02:00","relpermalink":"/post/bgp-multipath/","section":"post","summary":"Maximum path In the RIB + FIB ECMP (multipath)\nIs PIC supported by default ?\nhttps://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_bgp/configuration/xe-3s/irg-xe-3s-book/irg-bgp-mp-pic.html\n=\u0026gt; With BGP Multipath, the BGP prefix-independant convergence (PIC) feature is supported\n Attribut that should be identical \n- Weight\n- LP\n- AS Path (AS Number unless relax us used, AS length)\n- Origin Code\n- MED\n- IGP Metric Next hop should be different\nAdd Path If the path are equal, allow to advertise more than one bes oath (need to test in eBGP).","tags":[],"title":"Bgp Multipath","type":"post"},{"authors":["Noel"],"categories":["ROUTING"],"content":"prerequis : - github desktop - hugo\nconfig.toml =\u0026gt; need to be modify to change the copyright date\nlancer cmd\nGo to the folder blog : C:\\Users\\noyel\\Documents\\Site\\blog\u0026gt;\ntaper : hugo new post/my-first-post.md\ntry the web site with : hugo server -D\nentrer http://localhost:1313/\ngenerate the web site with : hugo -t \u0026ldquo;academic\u0026rdquo; Move the content of the folder C:\\Users\\noyel\\Documents\\Site\\blog\\public\nin GitHub\\netmemo.github.io lancer github desktop, commit/push to master\nTo have a file attached for the post, create a directory with the exact same name as the post md file.\nThe language used to write a blog post is Markdown https://www.markdownguide.org/basic-syntax https://www.tutorialspoint.com/html/html_ascii_codes.htm\nBold and underline **\u0026lt;ins\u0026gt; Cons \u0026lt;/ins\u0026gt;**\n","date":1589176811,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589176811,"objectID":"b574d36d30607eb31ef58b610a3fbd9a","permalink":"https://netmemo.github.io/post/how-to-hugo/","publishdate":"2020-05-11T08:00:11+02:00","relpermalink":"/post/how-to-hugo/","section":"post","summary":"prerequis : - github desktop - hugo\nconfig.toml =\u0026gt; need to be modify to change the copyright date\nlancer cmd\nGo to the folder blog : C:\\Users\\noyel\\Documents\\Site\\blog\u0026gt;\ntaper : hugo new post/my-first-post.md\ntry the web site with : hugo server -D\nentrer http://localhost:1313/\ngenerate the web site with : hugo -t \u0026ldquo;academic\u0026rdquo; Move the content of the folder C:\\Users\\noyel\\Documents\\Site\\blog\\public\nin GitHub\\netmemo.github.io lancer github desktop, commit/push to master\nTo have a file attached for the post, create a directory with the exact same name as the post md file.","tags":["ANYCAST","OSPF","BGP","ROUTING"],"title":"How to hugo","type":"post"},{"authors":["Noel"],"categories":["ROUTING"],"content":" Issue R3 route traffic to R4 instead of R1. Route 10.10.10.10 toward the WAN is prefered instead of the OSPF LAN DC route. DC Client that try to reach the DC\u0026rsquo;s 10.10.10.10 address are routed toward the WAN\nWhy R3 is installing in it RIB and redistributing the wrong routes 10.10.10.10 because it does have a better AD 20.\nWorkarround  If we filter the redistribution that doesn\u0026rsquo;t help because when the packet arrive to R3 he will still prefer the BGP route. If we drop the prefix on R3 we loose the redundancy Increase the AD of the WAN route on R3  ","date":1582065947,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1582065947,"objectID":"cbd0cba140a1956254039ffbd8bdf2a3","permalink":"https://netmemo.github.io/post/ospfbgpanycast/","publishdate":"2020-02-18T23:45:47+01:00","relpermalink":"/post/ospfbgpanycast/","section":"post","summary":"Issue R3 route traffic to R4 instead of R1. Route 10.10.10.10 toward the WAN is prefered instead of the OSPF LAN DC route. DC Client that try to reach the DC\u0026rsquo;s 10.10.10.10 address are routed toward the WAN\nWhy R3 is installing in it RIB and redistributing the wrong routes 10.10.10.10 because it does have a better AD 20.\nWorkarround  If we filter the redistribution that doesn\u0026rsquo;t help because when the packet arrive to R3 he will still prefer the BGP route.","tags":["ANYCAST","OSPF","BGP","ROUTING"],"title":"OSPF vs BGP with anycast prefix","type":"post"},{"authors":["Noel"],"categories":["DNS","loadbalancing"],"content":" DNS Steps to resolve a web site url in IP : !! The CNAME is normally not allowed at the apex, so I need to find another way) !! The following steps are when nothing is yet cached in any servers. This use case is for a recusive DNS resolver.\n The user try to access www.toto.com from his browser. His computer send the DNS query to the system\u0026#39;s configured DNS Resolver. For instance 9.9.9.9 (quad9).\n The recursive (not iterative) DNS resolver send the DNS query to one of the 13 root servers to know how to resovle \u0026ldquo;.com\u0026rdquo; The root servers are know by default by all resolvers.\n The root server answer with a referral to the TLD server for \u0026ldquo;.com\u0026rdquo;\n The DNS resolver query the TLD to know who is in charge for resolving \u0026ldquo;toto.com\u0026rdquo;\n The TLD server answer with the glue records configured by the website owner through the registrar portal.\n The DNS resolver query Authoritative DNS server of the company for the IP address of \u0026ldquo;www.toto.com\u0026rdquo;\n The Authoritative DNS Server of the company answer with a CNAME of www.gslb.toto.com and the IP address of the GSLB NS in charge of the web site.\n The resolver query the GSLB to have the IP address of \u0026ldquo;www.gslb.toto.com\u0026rdquo;\n The GSLB answer with the IP address of the loadbalancer in charge of the IP address of the web site.\n The DNS Resolver forward the answer to the user.\n The user web browser can directly access the IP address of the web site.\n    1. This blog was mostly inspired from https://www.cloudflare.com/learning/dns/dns-server-types/ \u0026gt; \n 2. This link might help regarding the TTL https://www.bortzmeyer.org/forcer-ttl.html \n ","date":1570224048,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570224048,"objectID":"66e3bae2e78e657498a689fbbf5a44cf","permalink":"https://netmemo.github.io/post/dns-one-design/","publishdate":"2019-10-04T23:20:48+02:00","relpermalink":"/post/dns-one-design/","section":"post","summary":"DNS Steps to resolve a web site url in IP : !! The CNAME is normally not allowed at the apex, so I need to find another way) !! The following steps are when nothing is yet cached in any servers. This use case is for a recusive DNS resolver.\n The user try to access www.toto.com from his browser. His computer send the DNS query to the system\u0026#39;s configured DNS Resolver.","tags":["DNS","GSLB","GTM","LTM","loadbalancer","Loadbalancing","DNSTTL"],"title":"One of many possible DNS Design (Work in progress)","type":"post"},{"authors":["Noel"],"categories":["DNS"],"content":"At every layer, local cache of servers can override the configured TTL even if the TTL override is breaking the RFC\nCascade of DNS TTL of the wrong information make the information last longer in caches .\n","date":1570223703,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570223703,"objectID":"ab34344ddda45c0fa8882c84fd34f428","permalink":"https://netmemo.github.io/post/dns-ttl-cascade/","publishdate":"2019-10-04T23:15:03+02:00","relpermalink":"/post/dns-ttl-cascade/","section":"post","summary":"At every layer, local cache of servers can override the configured TTL even if the TTL override is breaking the RFC\nCascade of DNS TTL of the wrong information make the information last longer in caches .","tags":["DNS","DNSTTL","DNS_CACHE"],"title":"Dns Ttl Cascade (Work in progress)","type":"post"},{"authors":["Noel"],"categories":["DNS","loadbalancing"],"content":" For a short A record TTL Client keep using A until TTL has expired. If A is 30 second and outage occure just after the DNS request for A record, the outage last 30 seconds.\nWen A has expired, the client browser query the resolver who might query the GSLB NS of the broken site, wait for the DNS query timeout then query the working GSLB NS that will return the working A record. As the A TTL is short, the client might experience lots of DNS query timeout (every 30seconds when it will query for the A record to the broken GSLB NS) that might impact the browsing experience and slow it down.\nFor a longer A record TTL Client keep using A until TTL has expired. If A is 10mn and outage occure just after the DNS request for A, the outage last 10mn.\nWhen A has expired, the client browser query the resolver who might query the GSLB NS of the broken site for the A record, wait for the DNS query timeout then query the working GSLB NS that will return the working A record. As the A TTL is long, the initial outage might be up to 10mn but the subsequents DNS request will experience less DNS request timeout toward the broken GSLB IPs. After the potential initial 10mn outage, the browsing experience under GSLB failure might be slightly better. In the end, the GSLB will have less DNS request to handle even during normal operation.\n  1. This blog was mostly inspired from https://www.cloudflare.com/learning/dns/dns-server-types/ \u0026gt; \n 2. This link might help regarding the TTL https://www.bortzmeyer.org/forcer-ttl.html \n ","date":1556399167,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556399167,"objectID":"bbb77c6e22aace3868481e8826e60233","permalink":"https://netmemo.github.io/post/dns-outage/","publishdate":"2019-04-27T23:06:07+02:00","relpermalink":"/post/dns-outage/","section":"post","summary":"For a short A record TTL Client keep using A until TTL has expired. If A is 30 second and outage occure just after the DNS request for A record, the outage last 30 seconds.\nWen A has expired, the client browser query the resolver who might query the GSLB NS of the broken site, wait for the DNS query timeout then query the working GSLB NS that will return the working A record.","tags":["DNS","GSLB","GTM","LTM","loadbalancer","Loadbalancing","DNSTTL"],"title":"Dns Outage (Work in progress)","type":"post"},{"authors":["Noel"],"categories":["tools"],"content":" Below is a very light virtual machine based on Core Linux kernel 4.8 (TinyCore) 26 Mo with network tools like iperf3, tcpdump, net-bridging, iproute2, busybox (httpd), tcpreplay, nmap, openssh.\ncorelinux1.5.ova\nbasic commands/directory /etc/sysconfig/tcedir/optional =\u0026gt; packages /etc/sysconfig/tcedir/onboot.lst =\u0026gt; on boot package to be loaded  sudo vi /opt/eth0.sh =\u0026gt; change interfaces parameters #configure an interface pkill udhcp =\u0026gt; stop dhcp for this interface ifconfig eth1 10.253.106.2 netmask 255.255.255.192 up route add default gw 10.253.106.1  filetool.sh -b =\u0026gt; save the configuration changes  vi /opt/hostnameAuto.sh =\u0026gt; change the hostname vi /opt/bootlocal.sh =\u0026gt; the script that is executed after the device has booted.  ","date":1540215355,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1540215355,"objectID":"e1a31189949599c96ef2ff11865654fa","permalink":"https://netmemo.github.io/post/corelinuxnetmemo/","publishdate":"2018-10-22T15:35:55+02:00","relpermalink":"/post/corelinuxnetmemo/","section":"post","summary":"Below is a very light virtual machine based on Core Linux kernel 4.8 (TinyCore) 26 Mo with network tools like iperf3, tcpdump, net-bridging, iproute2, busybox (httpd), tcpreplay, nmap, openssh.\ncorelinux1.5.ova\nbasic commands/directory /etc/sysconfig/tcedir/optional =\u0026gt; packages /etc/sysconfig/tcedir/onboot.lst =\u0026gt; on boot package to be loaded  sudo vi /opt/eth0.sh =\u0026gt; change interfaces parameters #configure an interface pkill udhcp =\u0026gt; stop dhcp for this interface ifconfig eth1 10.253.106.2 netmask 255.255.255.192 up route add default gw 10.","tags":["tools","VM","Core Linux"],"title":"Core Linux Netmemo","type":"post"},{"authors":["Noel"],"categories":["container"],"content":" This post is a memo on how I did the installtion of Kubernetes and Calico on VMs. It\u0026rsquo;s not some best pactrices in anyway.\nI\u0026rsquo;ve chose VM because I didn\u0026rsquo;t want to depend on any Cloud infrastructure. I\u0026rsquo;ve also wanted to understand the network interaction between K8s parts from an infrastructure point of view.\nPrerequisite : know how to create VMs on any hypervisors\nSteps to deploy K8s :  Install 1 ubuntu router with 3 interfaces. 1 for NAT/Internet access and 2 for the K8s LAN. I\u0026rsquo;ve created 2 LAN to see what happen under the hood when K8s nodes communicates.\n Install 3 Ubuntu servers, 1 for the master and 2 for the workers. 1 worker in the same ethernet segment and subnet than the master. 1 worker in another network.\n Gotchas:  By default, the K8s interface is the one with the default route. All my servers have one OOB interface and one production interface. Special tunning for k8s =\u0026gt; turn off the swap   Install runtime and enable it on boot\n Installing kubeadm, kubelet and kubectl\n Initializing the master (choose the pod network add-on before to add the relevent parameters, Calico parameters in my case)\n Install the pod network add-on\n Join node/workers to the cluster\n That it, you can now play with the K8s cluster\n  Optional : Install ctl for calico\nComments : To create anything you just have to kubectl apply -f myfile The magic happen in myfile where you describe what you want to create.\nBelow the capture after the lab is completed CaptureCalicok8s\nDetails of the tasks 3. https://kubernetes.io/docs/setup/independent/install-kubeadm/#installing-runtime\nI\u0026rsquo;ve needed to add the following commands\nsystemctl enable docker.service systemctl start docker.service  4. https://kubernetes.io/docs/setup/independent/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl\napt-get update \u0026amp;amp;\u0026amp;amp; apt-get install -y apt-transport-https curl curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - cat \u0026amp;lt;\u0026amp;lt;EOF \u0026amp;gt;/etc/apt/sources.list.d/kubernetes.list deb http://apt.kubernetes.io/ kubernetes-xenial main EOF apt-get update apt-get install -y kubelet kubeadm kubectl apt-mark hold kubelet kubeadm kubectl  5.\nkubeadm init --pod-network-cidr=192.168.0.0/16 mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config  6.\nkubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml  7.\nkubeadm join 10.0.1.10:6443 --token d34b9i.v03t2yiozio63cq6 --discovery-token-ca-cert-hash sha256:c21d04ea23790a0bf81cf64118e3a9075ffb63ed90bc697acef5793386e9eb16  ","date":1538776759,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538776759,"objectID":"04e4be9702fa5b85a26f6612d64762cc","permalink":"https://netmemo.github.io/post/k8s-on-vms-with-calico/","publishdate":"2018-10-05T23:59:19+02:00","relpermalink":"/post/k8s-on-vms-with-calico/","section":"post","summary":"This post is a memo on how I did the installtion of Kubernetes and Calico on VMs. It\u0026rsquo;s not some best pactrices in anyway.\nI\u0026rsquo;ve chose VM because I didn\u0026rsquo;t want to depend on any Cloud infrastructure. I\u0026rsquo;ve also wanted to understand the network interaction between K8s parts from an infrastructure point of view.\nPrerequisite : know how to create VMs on any hypervisors\nSteps to deploy K8s :  Install 1 ubuntu router with 3 interfaces.","tags":["calico","docker","k8s","kubernetes","netplan","ubuntu","virtualbox"],"title":"K8s on Vms With Calico","type":"post"},{"authors":["Noel"],"categories":["cisco","nexus"],"content":"On N7K\nhttps://www.cisco.com/c/en/us/support/docs/switches/nexus-7000-series-switches/116647-technote-product-00.html\n=\u0026gt; flanker car avec la commande show hardware internal dev-port-map, il n\u0026rsquo;y a pas d\u0026rsquo;asic Clipper, uniquement des flanker\nSample of icmp troubleshooting from the Admin VDC\nshow module attach module 1 show hardware internal dev-port-map elam asic flanker instance 2 layer2 trigger dbus ipv4 egress if destination-ipv4-address 10.253.108.90 start status  elam asic flanker instance 2 layer2 trigger dbus ipv4 ingress if destination-ipv4-address 10.253.108.90 start status  On N5K\nhttps://www.cisco.com/c/en/us/support/docs/switches/nexus-6000-series-switches/118902-technote-nexus-00.html\nMY-SWITCH# show platform fwm info pif ethernet 2/2 | inc slot_asic Eth2/2 pd: slot 1 logical port num 1 slot_asic_num 0 global_asic_num 5 fw_inst 4 phy_fw_inst 1 fc 0  Note: The slot numbers are 0-based, whereas the bigsur instances are 1-based. Therefore, in this example slot 1 corresponds to bigsur instance 2.\n=\u0026gt; slot 1 become 2 in the elam command, the instance stay the same as the slot_asic_num =\u0026gt; ingress for the traffic ingressing the interface, egress for the egressing traffic.\nelam slot 2 asic bigsur instance 0 trigger lu ingress ipv4 if source-ipv4-address_ipv4 10.253.108.226 destination-ipv4-address_ipv4 10.253.108.90 start capture show elam asic bigsur show capture lu stop capture  ","date":1538606937,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538606937,"objectID":"f8fba9a12db76da45dc28dbce3e682ba","permalink":"https://netmemo.github.io/post/troubleshooting-elam-cisco-n7k-n5k/","publishdate":"2018-10-04T00:48:57+02:00","relpermalink":"/post/troubleshooting-elam-cisco-n7k-n5k/","section":"post","summary":"On N7K\nhttps://www.cisco.com/c/en/us/support/docs/switches/nexus-7000-series-switches/116647-technote-product-00.html\n=\u0026gt; flanker car avec la commande show hardware internal dev-port-map, il n\u0026rsquo;y a pas d\u0026rsquo;asic Clipper, uniquement des flanker\nSample of icmp troubleshooting from the Admin VDC\nshow module attach module 1 show hardware internal dev-port-map elam asic flanker instance 2 layer2 trigger dbus ipv4 egress if destination-ipv4-address 10.253.108.90 start status  elam asic flanker instance 2 layer2 trigger dbus ipv4 ingress if destination-ipv4-address 10.253.108.90 start status  On N5K","tags":["cisco","elam","N5K","N7K","troubleshooting"],"title":"Troubleshooting Elam Cisco N7k N5k","type":"post"},{"authors":["Noel"],"categories":["container"],"content":"This is the cheat sheet for the post : https://netmemo.github.io/post/k8s-on-vms-with-calico/\nThe following post contain raw entry only for reminder purpose.\nBellow are the links I\u0026rsquo;ve used to understand/did my lab\nhttps://fr.wikipedia.org/wiki/Kubernetes#/media/File:Kubernetes.png https://kubernetes.io/docs/setup/independent/install-kubeadm/ https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/ https://kubernetes.io/docs/tutorials/k8s101/ https://kubernetes.io/docs/tutorials/k8s201/ https://kubernetes.io/docs/reference/kubectl/cheatsheet/\nJoin a node/worker to the master\nkubeadm join 10.0.1.10:6443 --token d34b9i.v03t2yiozio63cq6 --discovery-token-ca-cert-hash sha256:c21d04ea23790a0bf81cf64118e3a9075ffb63ed90bc697acef5793386e9eb16  Delete a deployment\nkubectl delete deployment nginx-deployment-nbo  To get the logs of a specific container. -n is to specify the namespace\nkubectl logs calico-node-zxvjv -n kube-system calico-node  Allow to launch a shell for a specific container\nkubectl exec -it nginx-deployment-nbo-fd57b7b88-l8xsv -- /bin/bash  Create a static page in the container to differentiate it from the others. The -c option is to ask bash to execute the command.\nkubectl exec -it nginx-deployment-nbo-fd57b7b88-kkw9s -- /bin/bash -c \u0026quot;echo Hello shell demo SRV1 \u0026gt; /usr/share/nginx/html/index.html\u0026quot; kubectl exec -it nginx-deployment-nbo-fd57b7b88-kkw9s cat /usr/share/nginx/html/index.html  To troubleshhot\njournalctl -r  Display all pods, even with the system name space, -o wide allow to see the IP addresses\nkubectl get pods --all-namespaces -o wide  To see the last messages of container associated to the pode\nkubectl describe pod -n kube-system calico-node-zxvjv  Allow to see the node/server/worker ip addresses (-o wide)\nsudo kubectl get node -o wide  by default kubernetes don\u0026rsquo;t work with swap, so I needed to disable it with the command swapoff and to comment the swap line in the fstab file.\nswapoff vi /etc/fstab # /etc/fstab: static file system information. # # Use 'blkid' to print the universally unique identifier for a # device; this may be used with UUID= as a more robust way to name devices # that works even if disks are added and removed. See fstab(5). # # /dev/mapper/ubuntu--srv--base--vg-root / ext4 errors=remount-ro 0 1 #/dev/mapper/ubuntu--srv--base--vg-swap_1 none swap sw 0 0  Not related to Kubernets but you need to modify the interfaces\nvi /etc/netplan/01-netcfg.yaml  Add interfaces to ubuntu\n/etc/netplan/01-netcfg.yaml  This file describes the network interfaces available on your system For more information, see netplan(5).\nnetwork: version: 2 renderer: networkd ethernets: enp0s3: dhcp4: no addresses: - 10.0.1.10/24 routes: - to: 0.0.0.0/0 via: 10.0.1.253 nameservers: addresses: [1.1.1.1]  apply the /etc/netplan/01-netcfg.yaml configuration\nnetplan apply  display ip addresses on interfaces\nip address show  display all interfaces\nip link show  display routes\nroute -n  In order for Kubernetes to work, you need container runtime to be started\nsystemctl enable docker.service systemctl start docker.service  Download calicoctl, to be able to interact with calico with CLI\nsudo curl -O -L https://github.com/projectcalico/calicoctl/releases/download/v3.2.1/calicoctl sudo chmod +x calicoctl  To see the state of calico on nodes (BGP,Peer-type,up/down,time)\nsudo calicoctl node status  The following commands allow to export a variables with the IP address and ports of nginx-service previously created and access the content from the host or the container\nexport SERVICE_IP=$(kubectl get service nginx-service -o go-template='{{.spec.clusterIP}}') export SERVICE_PORT=$(kubectl get service nginx-service -o go-template='{{(index .spec.ports 0).port}}') wget -qO- http://$SERVICE_IP:$SERVICE_PORT kubectl run busybox --generator=run-pod/v1 --image=busybox --restart=Never --tty -i --env \u0026quot;SERVICE_IP=$SERVICE_IP\u0026quot; --env \u0026quot;SERVICE_PORT=$SERVICE_PORT\u0026quot; u@busybox$ wget -qO- http://$SERVICE_IP:$SERVICE_PORT # Run in the busybox container u@busybox$ exit # Exit the busybox container  noel@ubuntu-srv-1:~$ cat nginx-test.yaml apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2 kind: Deployment metadata: name: nginx-deployment-nbo spec: selector: matchLabels: app: nginx replicas: 3 # tells deployment to run 3 pods matching the template template: metadata: labels: app: nginx spec: volumes: - name: shared-data emptyDir: {} containers: - name: nginx image: nginx:1.7.9 volumeMounts: - name: shared-data mountPath: /usr/share/nginx/html ports: - containerPort: 80  https://kubernetes.io/docs/tutorials/k8s201/\napiVersion: v1 kind: Service metadata: name: nginx-service spec: ports: - port: 8000 # the port that this service should serve on # the container on each pod to connect to, can be a name # (e.g. 'www') or a number (e.g. 80) targetPort: 80 protocol: TCP # just like the selector in the deployment, # but this time it identifies the set of pods to load balance # traffic to. selector: app: nginx  These commands are to configure calicoctl in order to work with the local k8s\nexport CALICO_DATASTORE_TYPE=kubernetes export CALICO_KUBECONFIG=~/.kube/config Pour le root export CALICO_KUBECONFIG=/home/noel/.kube/config  Move the Calico mode from Always to CrossSubnet. First we get the calico ippool configuration, then we need to modify the ipipMode in the yaml file and eventually to apply the new configuration\ncalicoctl get ippool -o yaml \u0026gt; ippool.yaml  Change the mode ipipMode: CrossSubnet\ncalicoctl apply -f ippool.yaml  ","date":1538606240,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538606240,"objectID":"507e52dad9b1e639033f350fdc69e5dc","permalink":"https://netmemo.github.io/post/cheat-sheet-k8s-on-vms-with-calico/","publishdate":"2018-10-04T00:37:20+02:00","relpermalink":"/post/cheat-sheet-k8s-on-vms-with-calico/","section":"post","summary":"This is the cheat sheet for the post : https://netmemo.github.io/post/k8s-on-vms-with-calico/\nThe following post contain raw entry only for reminder purpose.\nBellow are the links I\u0026rsquo;ve used to understand/did my lab\nhttps://fr.wikipedia.org/wiki/Kubernetes#/media/File:Kubernetes.png https://kubernetes.io/docs/setup/independent/install-kubeadm/ https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/ https://kubernetes.io/docs/tutorials/k8s101/ https://kubernetes.io/docs/tutorials/k8s201/ https://kubernetes.io/docs/reference/kubectl/cheatsheet/\nJoin a node/worker to the master\nkubeadm join 10.0.1.10:6443 --token d34b9i.v03t2yiozio63cq6 --discovery-token-ca-cert-hash sha256:c21d04ea23790a0bf81cf64118e3a9075ffb63ed90bc697acef5793386e9eb16  Delete a deployment\nkubectl delete deployment nginx-deployment-nbo  To get the logs of a specific container. -n is to specify the namespace","tags":["calico","docker","k8s","kubernetes","netplan","ubuntu","virtualbox"],"title":"[Cheat Sheet] K8s on VMs with Calico","type":"post"}]