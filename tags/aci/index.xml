<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ACI on netmemo.github.io</title>
    <link>https://netmemo.github.io/tags/aci/</link>
    <description>Recent content in ACI on netmemo.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>No&amp;euml;l Boul&amp;egrave;ne &amp;copy; 2021. This blog is strictly personnal and opinions expressed here are only mine and doesn&amp;#39;t reflect those of my past, current or futur employers. No warranty whatsoever is made that any of the posts are accurate. There is absolutely no assurance (apart from author&amp;acute;s professional integrity) that any statement contained in a post is true, correct or precise.</copyright>
    <lastBuildDate>Wed, 18 May 2022 22:41:35 +0200</lastBuildDate>
    
	<atom:link href="https://netmemo.github.io/tags/aci/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ACI Terraform scalability</title>
      <link>https://netmemo.github.io/post/aci-terraform-scale/</link>
      <pubDate>Wed, 18 May 2022 22:41:35 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/aci-terraform-scale/</guid>
      <description>The context This blog is to explains the scalability issue I have faced while trying to use Terraform to deploy Cisco ACI Fabric. Terraform has been developed initially to deploy Cloud infrastructure. As everything is virtual in a Cloud environment, it&amp;rsquo;s more or less easy to organize your Terraform infrastructure per application to keep the environment small enough. As a best practice it&amp;rsquo;s recommended to keep the workspaces as small as possible to avoid performance issues.</description>
    </item>
    
    <item>
      <title>Cisco ACI Terraform Policy Model</title>
      <link>https://netmemo.github.io/post/aci-terraform-policy-model/</link>
      <pubDate>Wed, 15 Dec 2021 18:40:34 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/aci-terraform-policy-model/</guid>
      <description>The big picture This blog post is a memo for the ACI Terraform policy model. I have struggled to find equivalences between ACI REST API Call / Classes and Terraform resources. Below you can find the full diagram. The diagram is not exhaustive but I think I have reached a point where I can published something. I will probably modify or add things if I use more resources or if people correct me but I think it is a good start.</description>
    </item>
    
    <item>
      <title>ACI from an other angle</title>
      <link>https://netmemo.github.io/post/aci-other-angle/</link>
      <pubDate>Sat, 28 Nov 2020 19:11:36 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/aci-other-angle/</guid>
      <description>&amp;ldquo;Several of these protocols are standards&amp;rdquo; My understanding is that even if the protocols look standard, Cisco made some modifications on them : VXLAN (fiels to transport ACI Policies), ISIS (added the multidestination tree) and hence are note standard anymore.
&amp;ldquo;Does it require proprietary server ?&amp;rdquo; Not prorietary servers but proprietary switches&amp;hellip;So you are locked in regarding the software and the hardware. Both can&amp;rsquo;t be decoupled. If you choose to move to another switch vendor, you need to change the hardware and sart learning new software and protocols skills.</description>
    </item>
    
  </channel>
</rss>