<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on netmemo.github.io</title>
    <link>https://netmemo.github.io/post/</link>
    <description>Recent content in Posts on netmemo.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>No&amp;euml;l Boul&amp;egrave;ne &amp;copy; 2021. This blog is strictly personnal and opinions expressed here are only mine and doesn&amp;#39;t reflect those of my past, current or futur employers. No warranty whatsoever is made that any of the posts are accurate. There is absolutely no assurance (apart from author&amp;acute;s professional integrity) that any statement contained in a post is true, correct or precise.</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://netmemo.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CUE lang and HCL map key validation</title>
      <link>https://netmemo.github.io/post/cuelang-first/</link>
      <pubDate>Thu, 10 Nov 2022 09:15:33 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/cuelang-first/</guid>
      <description>Context I&amp;rsquo;m just starting to play with CUE lang to assess the benefit it can bring to the automation I&amp;rsquo;m doing. This is a short memo to remember how to do dictionary key validation with CUE lang and a little bit more.
My starting point was to do naming convention validation with CUE lang. I have the following data model in my Terraform files.
subnets = { &amp;quot;sub-primary&amp;quot; = { &amp;quot;subnet&amp;quot; = [&amp;quot;10.</description>
    </item>
    
    <item>
      <title>NSXT Service interface design consideration</title>
      <link>https://netmemo.github.io/post/nsxt-service-interface-design1/</link>
      <pubDate>Wed, 19 Oct 2022 19:15:38 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/nsxt-service-interface-design1/</guid>
      <description>Original design 
This is the starting point of the infrastructure. A classic design that lot of enterprises have or used to have. Virtual Machine (VM) and Bare Metal Server (BMS) are sharing a same vlan behind a firewall. Everything begins when the VM wants to move to a more virtual infrastructure with distributed routing and firewalling. In this case they want to move to VMware NSXT.
From a physical point of view, the migration is performed on leaf and spine infrastructure that we will call the underlay.</description>
    </item>
    
    <item>
      <title>Terraform list of map ordering</title>
      <link>https://netmemo.github.io/post/tf-map-ordering/</link>
      <pubDate>Sun, 24 Jul 2022 18:44:36 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/tf-map-ordering/</guid>
      <description>The need I went into some troubles when I wanted to implement NSXT rules. My aim was to keep the order of the rules as intended by the user when he wrote his data without asking him to enter a rule ID manually. If the order is kept then it&amp;rsquo;s easy to prioritize the rules according to their placement. With the NSX-T Terraform provider the rules are in the form below :</description>
    </item>
    
    <item>
      <title>Terraform and the chicken and egg problem</title>
      <link>https://netmemo.github.io/post/tf-chicken-egg/</link>
      <pubDate>Sun, 19 Jun 2022 09:03:41 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/tf-chicken-egg/</guid>
      <description>The chicken and egg problem I write a lot on Terraform because I like the tool very much. This time I thought it would be good to show a situation where Terraform is not necessarily the best tool for the job. The diagram below illustrates the problem.

A needs B and B needs A. If the relationship is mandatory it will be impossible to provision these resources because we have a chicken and egg problem.</description>
    </item>
    
    <item>
      <title>ACI Terraform scalability</title>
      <link>https://netmemo.github.io/post/aci-terraform-scale/</link>
      <pubDate>Wed, 18 May 2022 22:41:35 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/aci-terraform-scale/</guid>
      <description>The context This blog is to explains the scalability issue I have faced while trying to use Terraform to deploy Cisco ACI Fabric. Terraform has been developed initially to deploy Cloud infrastructure. As everything is virtual in a Cloud environment, it&amp;rsquo;s more or less easy to organize your Terraform infrastructure per application to keep the environment small enough. As a best practice it&amp;rsquo;s recommended to keep the workspaces as small as possible to avoid performance issues.</description>
    </item>
    
    <item>
      <title>How to check a variable in a Hashicorp Sentinel policy</title>
      <link>https://netmemo.github.io/post/sentinel-variable-check/</link>
      <pubDate>Tue, 19 Apr 2022 09:08:48 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/sentinel-variable-check/</guid>
      <description>This blog is a minimalist example of a Hashicorp Sentinel policy to check the content of a string variable. I&amp;rsquo;ve struggled a bit to write my first policy and had difficulties understanding the elements required. Nico Vibert&amp;rsquo;s blog has helped a lot.
Hashicorps sentinel policy are policies as code that will allow you to control what users are pushing through Terraform Enterprise/Cloud. This is a paid feature, Open Policy Agent is the open source alternative.</description>
    </item>
    
    <item>
      <title>How to put in production a Hashicorp Sentinel policy</title>
      <link>https://netmemo.github.io/post/hashicorp-sentinel-prod/</link>
      <pubDate>Tue, 19 Apr 2022 09:08:32 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/hashicorp-sentinel-prod/</guid>
      <description>In this third and last post of the serie, I will describe how to move the Sentinel policy into the production environment.
This serie is made of 3 posts:
 The policy The test environment The production environment  THE PRODUCTION ENVIRONMENT When your policy is ready, you need to deploy it into production. You can write a policy set that you will store to a VCS (version control system) or you can add the policy individually in the GUI and attach it to the a policy set that you would have created on the GUI.</description>
    </item>
    
    <item>
      <title>How to test a Hashicorp Sentinel policy</title>
      <link>https://netmemo.github.io/post/hashicorp-sentinel-test/</link>
      <pubDate>Tue, 19 Apr 2022 09:08:28 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/hashicorp-sentinel-test/</guid>
      <description>In this second post of the serie, I will describe the steps I have done to set up the test environment to test my Sentinel policy.
This serie is made of 3 posts:
 The policy The test environment The production environment  THE TEST ENVIRONMENT When we develop the policy it will be very difficult to push a configuration to see if the policy behaves like we want. Hashicorp provide a test environment to ease the development of the policies.</description>
    </item>
    
    <item>
      <title>NSX-T Uplinks Memo</title>
      <link>https://netmemo.github.io/post/nsx-t-uplinks-memo/</link>
      <pubDate>Tue, 15 Mar 2022 19:17:50 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/nsx-t-uplinks-memo/</guid>
      <description>This is a memo regarding NSX-T uplinks. I think this is the most confusing and difficult part to understand in NSX-T. This post is made of 3 sections, Diagram with a more visual approach, Component with remarks/comments on uplinks components and a Q&amp;amp;A section based on questions I was asking myself. You can find duplicate information but slightly rephrased in every section. I kept it that way as some time some form are easier to understand than other.</description>
    </item>
    
    <item>
      <title>Terraform One Step Further</title>
      <link>https://netmemo.github.io/post/terraform-one-step-further/</link>
      <pubDate>Wed, 26 Jan 2022 22:00:26 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/terraform-one-step-further/</guid>
      <description>This blog is in two parts. The first part explains what is needed to start with Terraform. This second part is to go one step further but still targets beginners.
You can find more in depth articles on Gruntwork blog and the Terraform documentation is also very good.
Table of contents  Terraform Bare minimum Terraform one step further
 What happens in the background ?
 What happens if we modify the object on GUI ?</description>
    </item>
    
    <item>
      <title>Terraform Bootstrap</title>
      <link>https://netmemo.github.io/post/terraform-bootstrap/</link>
      <pubDate>Wed, 19 Jan 2022 18:40:34 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/terraform-bootstrap/</guid>
      <description>This blog is in two parts. This first part explains what is needed to start with Terraform, the second part is to go one step further but still targets beginners.
Table of content  Terraform bare minimum
 Terraform, what is it ?
 What do I need to provision something with Terraform ?
 How do I know what to create ? The configuration is made of 3 blocks</description>
    </item>
    
    <item>
      <title>Cisco ACI Terraform Policy Model</title>
      <link>https://netmemo.github.io/post/aci-terraform-policy-model/</link>
      <pubDate>Wed, 15 Dec 2021 18:40:34 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/aci-terraform-policy-model/</guid>
      <description>The big picture This blog post is a memo for the ACI Terraform policy model. I have struggled to find equivalences between ACI REST API Call / Classes and Terraform resources. Below you can find the full diagram. The diagram is not exhaustive but I think I have reached a point where I can published something. I will probably modify or add things if I use more resources or if people correct me but I think it is a good start.</description>
    </item>
    
    <item>
      <title>Can we ping an AWS Lambda function ?</title>
      <link>https://netmemo.github.io/post/lambdaping/</link>
      <pubDate>Tue, 16 Nov 2021 18:00:45 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/lambdaping/</guid>
      <description>Context Can we ping the ENI of an AWS Lambda function within the VPC ? While the answer can be obvious the path to get it was insightful for me and has helped me to be more comfortable with :
 AWS IAM.
 AWS Lambdas function.
 AWS Static IP addresses and AWS default subnets.
  This test can be performed with the AWS free tier. You will find the Terraform scripts here : Lambda Ping</description>
    </item>
    
    <item>
      <title>AWS IAM Roles with Terraform</title>
      <link>https://netmemo.github.io/post/tf-iam-roles/</link>
      <pubDate>Mon, 27 Sep 2021 18:04:31 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/tf-iam-roles/</guid>
      <description>An IAM role is an AWS identity with permission policies that determine what the identity can and cannot do in AWS.
TL;DR  The principal is WHO will be able to access a resource.
 The policy is WHAT the principals associated with the role will be able to do.
 The role links the principals thanks to the assume_role_policy with the inline policy argument. The attachement links the role to a managed policies instead of the inline policy.</description>
    </item>
    
    <item>
      <title>Github Actions with Terraform Cloud for CI/CD of NSX-T</title>
      <link>https://netmemo.github.io/post/tf-gha-nsxt-cicd/</link>
      <pubDate>Sun, 15 Aug 2021 14:02:39 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/tf-gha-nsxt-cicd/</guid>
      <description>This post is to show an example of using CI/CD with Terraform Cloud and Github Actions in order to have a better NetDevOps approach by doing NSX-T Network Infrastructure as code (IaC). It&amp;rsquo;s almost a bingo, I think I have most of the buzz words of these last years :)
I will describe the structure of the project, the project components, the project workflow and finish with how to test this project.</description>
    </item>
    
    <item>
      <title>Triggering Github Actions workflow with automatic Pull Request</title>
      <link>https://netmemo.github.io/post/gha-auto-pr/</link>
      <pubDate>Thu, 12 Aug 2021 17:01:57 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/gha-auto-pr/</guid>
      <description>This post is to explain one of the pain point I have encountered while trying to do Github Actions with Terraform Cloud for CI/CD of NSX-T. The difficulty is to chain workflow/pipeline automatically. In my case, I wanted to launch a workflow base of a PR create by another workflow. When you use Github Actions to interface with Github, you need to authenticate your Github Actions script against Github. You can then use the GITHUB_TOKEN that has been made for this purpose.</description>
    </item>
    
    <item>
      <title>Changing Terraform Cloud workspace in Github Actions</title>
      <link>https://netmemo.github.io/post/tf-workspace-var/</link>
      <pubDate>Thu, 12 Aug 2021 15:22:40 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/tf-workspace-var/</guid>
      <description>This blog post is to explain how I did to automatically change Terraform Cloud workspace from Github Actions. As explained in the documentation remote workspace, you can use different remote workspace by specifying the prefix of you workspace in the Terraform backend configuration.
 backend &amp;quot;remote&amp;quot; { organization = &amp;quot;netmemo&amp;quot; workspaces { prefix = &amp;quot;netmemo-&amp;quot; } }  After that, you only need to select the proper workspace by entering the terraform workspace select [suffix] command.</description>
    </item>
    
    <item>
      <title>NSX-T Firewall rules as code with Terraform</title>
      <link>https://netmemo.github.io/post/nsxt-tf-firewall/</link>
      <pubDate>Thu, 29 Jul 2021 19:03:37 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/nsxt-tf-firewall/</guid>
      <description>This article is to show an example of how to manage NSX-T firewall rules as a code through Terraform. You can find the project on my github account : nsxt-frac-tf-cm and nsxt-frac-tf-rm
I will describe the structure of the project, how it works, the data model, the Terraform code explanation and finish with an example.
Structure of the project The diagram below shows a summary of how I organized the project in order to fully use infrastructre as code.</description>
    </item>
    
    <item>
      <title>Subnet sizing and heterogeneous subnets</title>
      <link>https://netmemo.github.io/post/subnets-size-mix/</link>
      <pubDate>Tue, 18 May 2021 22:28:39 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/subnets-size-mix/</guid>
      <description>Along my different jobs, one of the things that led to L2 extension and then brought risks and slew down or even blocked projects was big heterogeneous subnets.
Often the initial rational of big heterogeneous subnets was to avoid too much vlans on physical infrastructure. Historically physical infrastructure had vlans and spanning tree limits. The problem is that when migration time is coming nobody wants to change IP addresses. Even after arguing, this is the network that bears the risk to break the entire company by stretching L2.</description>
    </item>
    
    <item>
      <title>Terraform Refactoring State File</title>
      <link>https://netmemo.github.io/post/terraform-refactoring-state-file/</link>
      <pubDate>Thu, 25 Feb 2021 21:56:57 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/terraform-refactoring-state-file/</guid>
      <description>https://www.terraform.io/docs/cli/commands/state/mv.html
On windows :
terraform state mv nsxt_policy_security_policy.policy1 nsxt_policy_security_policy.policies[\&amp;ldquo;policy1\&amp;ldquo;]  It move resources from a construct like this
locals { policy1= { rule1 = { source = [&amp;quot;src1&amp;quot;,&amp;quot;src2&amp;quot;] } } policy2 = { rule1 = { source = [&amp;quot;src3&amp;quot;,&amp;quot;src4&amp;quot;] } } }  To a structure like this
locals { policies = { policy1 = { rule1 = { source = [&amp;quot;src1&amp;quot;,&amp;quot;src2&amp;quot;] } } policy2 = { rule2 = { source = [&amp;quot;src3&amp;quot;,&amp;quot;src4&amp;quot;] } } } }  The main moving from</description>
    </item>
    
    <item>
      <title>Python Package Offline</title>
      <link>https://netmemo.github.io/post/python-package-offline/</link>
      <pubDate>Thu, 25 Feb 2021 21:46:14 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/python-package-offline/</guid>
      <description>To install python packages offline (with no internet access), the simplest way is to dowload the packages with the dependencies on a server with internet access and the below command.
 C:\Users\Nono\Desktop\pythonpip download requests Collecting requests Using cached requests-2.25.1-py2.py3-none-any.whl (61 kB) Collecting urllib3=1.21.1 Using cached urllib3-1.26.3-py2.py3-none-any.whl (137 kB) Collecting certifi=2017.4.17 Using cached certifi-2020.12.5-py2.py3-none-any.whl (147 kB) Collecting idna=2.5 Using cached idna-2.10-py2.py3-none-any.whl (58 kB) Collecting chardet=3.0.2 Using cached chardet-4.0.0-py2.py3-none-any.whl (178 kB) Saved c:\users\nono\desktop\python\requests-2.</description>
    </item>
    
    <item>
      <title>N5600 Buffering</title>
      <link>https://netmemo.github.io/post/n5600-buffering/</link>
      <pubDate>Tue, 23 Feb 2021 22:24:44 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/n5600-buffering/</guid>
      <description>QoS VOQ On N5K, In the case of unicast traffic, VOQ is an ingress buffer pool for 3 ingress ports (1 ASIC = 3 ports). This buffer pool is split into n x reservable buffer of the size configured in the voq-limit command. If the ingress buffer is 16000 and the VOQ limit is 1024, that mean 16 flow can reserv buffers. When the shared buffer is exausted, the dedicated ingress buffer per port is used then when it&amp;rsquo;s full, the packet is droped.</description>
    </item>
    
    <item>
      <title>Terraform nested for_each for NSX-T with dynamic</title>
      <link>https://netmemo.github.io/post/tf-nsxt-nested-for-each/</link>
      <pubDate>Fri, 19 Feb 2021 22:06:50 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/tf-nsxt-nested-for-each/</guid>
      <description>The post below shows how to create security policy groups for NSX-T with Terraform nested for_each loop and dynamic.
The variables are made from one map of list. Each list represents one group composed of tags.
https://www.hashicorp.com/blog/hashicorp-terraform-0-12-preview-for-and-for-each
variable &amp;quot;mapgroups&amp;quot; { type	= map default	= { NBO	= [&amp;quot;NBO&amp;quot;] NBO-PROD	= [&amp;quot;NBO&amp;quot;,&amp;quot;PROD&amp;quot;] } } resource &amp;quot;nsxt_policy_group&amp;quot; &amp;quot;nbogroups&amp;quot; { for_each	= var.mapgroups display_name	= each.key criteria { dynamic &amp;quot;condition&amp;quot; { for_each = each.</description>
    </item>
    
    <item>
      <title>Create portable Terraform and plugins with Terraform-bundle for Windows</title>
      <link>https://netmemo.github.io/post/tf-bundle-windows/</link>
      <pubDate>Wed, 17 Feb 2021 21:32:37 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/tf-bundle-windows/</guid>
      <description>The steps below are what I have followed to create a terraform-bundle to use terraform with non default providers on a server that doesn&amp;rsquo;t have access to Internet. You can find the tool explanation in the below link.
https://github.com/hashicorp/terraform/tree/master/tools/terraform-bundle
installation of golang with msi downloaded here
https://golang.org/doc/install
Clone the terraform repository to get the tool
https://github.com/hashicorp/terraform.git
cd terraform-master go install .\tools\terraform-bundle  Check the terraform version C:\Users\noyel\Desktop\tfforeach\nsxt&amp;gt;terraform version Terraform v0.</description>
    </item>
    
    <item>
      <title>Using Terraform for_each to create subnets in AWS VPC</title>
      <link>https://netmemo.github.io/post/tf-for-each/</link>
      <pubDate>Wed, 17 Feb 2021 20:59:49 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/tf-for-each/</guid>
      <description>An extended explanation of the differences between for_each, for and count can be find on the link below https://blog.gruntwork.io/terraform-tips-tricks-loops-if-statements-and-gotchas-f739bbae55f9
The two main drawbacks of using count are :
- Can&amp;rsquo;t be used to loop over inline blocks
- Difficult to remove entry from a list because it changes the index and those Terraform may want to destroy the resource because it has a different index
Below is an example of the variables used to create subnets within AWS VPCs and the main file with the for_each.</description>
    </item>
    
    <item>
      <title>BFD on directly connected</title>
      <link>https://netmemo.github.io/post/bfd-directly-connected/</link>
      <pubDate>Wed, 02 Dec 2020 09:29:50 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/bfd-directly-connected/</guid>
      <description>One article that can help understanding and make decisions about fast failover https://blog.ipspace.net/2020/11/detecting-network-failure.html https://blog.ipspace.net/2012/09/do-we-need-lacp-and-udld.html
Is there any benefit by enabling BFD on directly connected interface ?
Sometime it can be enabled to help veryfied that there are no issues on physical layer and data link layer of an interface. It can help if on the data link layer you are not using UDLD or LACP.</description>
    </item>
    
    <item>
      <title>ACI from an other angle</title>
      <link>https://netmemo.github.io/post/aci-other-angle/</link>
      <pubDate>Sat, 28 Nov 2020 19:11:36 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/aci-other-angle/</guid>
      <description>&amp;ldquo;Several of these protocols are standards&amp;rdquo; My understanding is that even if the protocols look standard, Cisco made some modifications on them : VXLAN (fiels to transport ACI Policies), ISIS (added the multidestination tree) and hence are note standard anymore.
&amp;ldquo;Does it require proprietary server ?&amp;rdquo; Not prorietary servers but proprietary switches&amp;hellip;So you are locked in regarding the software and the hardware. Both can&amp;rsquo;t be decoupled. If you choose to move to another switch vendor, you need to change the hardware and sart learning new software and protocols skills.</description>
    </item>
    
    <item>
      <title>Arista basic ISIS-SR</title>
      <link>https://netmemo.github.io/post/aristabasesr/</link>
      <pubDate>Tue, 24 Nov 2020 18:12:05 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/aristabasesr/</guid>
      <description>ISIS Segment routing basics for Arista EOS References:
https://www.arista.com/en/um-eos/eos-section-35-3-is-is-segment-routing
SRGB Segment Routing Golbal Block
Prefix-SID It&amp;rsquo;s global and unique. It identify a prefix. It&amp;rsquo;s called anycast SID when it&amp;rsquo;s send by a group of router.
Node-SID It&amp;rsquo;s global and unique. Only one per node. It identify the node.
Adjacent-SID It&amp;rsquo;s local and can use a dynamique range. It&amp;rsquo;s used to identify an interconnection between 2 nodes.
With Arista EOS 4.</description>
    </item>
    
    <item>
      <title>Bgp Multipath</title>
      <link>https://netmemo.github.io/post/bgp-multipath/</link>
      <pubDate>Mon, 11 May 2020 08:02:21 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/bgp-multipath/</guid>
      <description>Maximum path In the RIB + FIB ECMP (multipath)
Is PIC supported by default ?
https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_bgp/configuration/xe-3s/irg-xe-3s-book/irg-bgp-mp-pic.html
=&amp;gt; With BGP Multipath, the BGP prefix-independant convergence (PIC) feature is supported
 Attribut that should be identical 
- Weight
- LP
- AS Path (AS Number unless relax us used, AS length)
- Origin Code
- MED
- IGP Metric Next hop should be different
Add Path If the path are equal, allow to advertise more than one bes oath (need to test in eBGP).</description>
    </item>
    
    <item>
      <title>How to hugo</title>
      <link>https://netmemo.github.io/post/how-to-hugo/</link>
      <pubDate>Mon, 11 May 2020 08:00:11 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/how-to-hugo/</guid>
      <description>prerequis : - github desktop - hugo
config.toml =&amp;gt; need to be modify to change the copyright date
lancer cmd
Go to the folder blog : C:\Users\noyel\Documents\Site\blog&amp;gt;
taper : hugo new post/my-first-post.md
try the web site with : hugo server -D
entrer http://localhost:1313/
generate the web site with : hugo -t &amp;ldquo;academic&amp;rdquo; Move the content of the folder C:\Users\noyel\Documents\Site\blog\public
in GitHub\netmemo.github.io lancer github desktop, commit/push to master
To have a file attached for the post, create a directory with the exact same name as the post md file.</description>
    </item>
    
    <item>
      <title>OSPF vs BGP with anycast prefix</title>
      <link>https://netmemo.github.io/post/ospfbgpanycast/</link>
      <pubDate>Tue, 18 Feb 2020 23:45:47 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/ospfbgpanycast/</guid>
      <description>Issue R3 route traffic to R4 instead of R1. Route 10.10.10.10 toward the WAN is prefered instead of the OSPF LAN DC route. DC Client that try to reach the DC&amp;rsquo;s 10.10.10.10 address are routed toward the WAN
Why R3 is installing in it RIB and redistributing the wrong routes 10.10.10.10 because it does have a better AD 20.
Workarround  If we filter the redistribution that doesn&amp;rsquo;t help because when the packet arrive to R3 he will still prefer the BGP route.</description>
    </item>
    
    <item>
      <title>Core Linux Netmemo</title>
      <link>https://netmemo.github.io/post/corelinuxnetmemo/</link>
      <pubDate>Mon, 22 Oct 2018 15:35:55 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/corelinuxnetmemo/</guid>
      <description>Below is a very light virtual machine based on Core Linux kernel 4.8 (TinyCore) 26 Mo with network tools like iperf3, tcpdump, net-bridging, iproute2, busybox (httpd), tcpreplay, nmap, openssh.
corelinux1.5.ova
basic commands/directory /etc/sysconfig/tcedir/optional =&amp;gt; packages /etc/sysconfig/tcedir/onboot.lst =&amp;gt; on boot package to be loaded  sudo vi /opt/eth0.sh =&amp;gt; change interfaces parameters #configure an interface pkill udhcp =&amp;gt; stop dhcp for this interface ifconfig eth0 10.253.106.2 netmask 255.255.255.192 up route add default gw 10.</description>
    </item>
    
    <item>
      <title>K8s on Vms With Calico</title>
      <link>https://netmemo.github.io/post/k8s-on-vms-with-calico/</link>
      <pubDate>Fri, 05 Oct 2018 23:59:19 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/k8s-on-vms-with-calico/</guid>
      <description>This post is a memo on how I did the installtion of Kubernetes and Calico on VMs. It&amp;rsquo;s not some best pactrices in anyway.
I&amp;rsquo;ve chose VM because I didn&amp;rsquo;t want to depend on any Cloud infrastructure. I&amp;rsquo;ve also wanted to understand the network interaction between K8s parts from an infrastructure point of view.
Prerequisite : know how to create VMs on any hypervisors
Steps to deploy K8s :  Install 1 ubuntu router with 3 interfaces.</description>
    </item>
    
    <item>
      <title>Troubleshooting Elam Cisco N7k N5k</title>
      <link>https://netmemo.github.io/post/troubleshooting-elam-cisco-n7k-n5k/</link>
      <pubDate>Thu, 04 Oct 2018 00:48:57 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/troubleshooting-elam-cisco-n7k-n5k/</guid>
      <description>On N7K
https://www.cisco.com/c/en/us/support/docs/switches/nexus-7000-series-switches/116647-technote-product-00.html
=&amp;gt; flanker car avec la commande show hardware internal dev-port-map, il n&amp;rsquo;y a pas d&amp;rsquo;asic Clipper, uniquement des flanker
Sample of icmp troubleshooting from the Admin VDC
show module attach module 1 show hardware internal dev-port-map elam asic flanker instance 2 layer2 trigger dbus ipv4 egress if destination-ipv4-address 10.253.108.90 start status  elam asic flanker instance 2 layer2 trigger dbus ipv4 ingress if destination-ipv4-address 10.253.108.90 start status  On N5K</description>
    </item>
    
    <item>
      <title>[Cheat Sheet] K8s on VMs with Calico</title>
      <link>https://netmemo.github.io/post/cheat-sheet-k8s-on-vms-with-calico/</link>
      <pubDate>Thu, 04 Oct 2018 00:37:20 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/cheat-sheet-k8s-on-vms-with-calico/</guid>
      <description>This is the cheat sheet for the post : https://netmemo.github.io/post/k8s-on-vms-with-calico/
The following post contain raw entry only for reminder purpose.
Bellow are the links I&amp;rsquo;ve used to understand/did my lab
https://fr.wikipedia.org/wiki/Kubernetes#/media/File:Kubernetes.png https://kubernetes.io/docs/setup/independent/install-kubeadm/ https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/ https://kubernetes.io/docs/tutorials/k8s101/ https://kubernetes.io/docs/tutorials/k8s201/ https://kubernetes.io/docs/reference/kubectl/cheatsheet/
Join a node/worker to the master
kubeadm join 10.0.1.10:6443 --token d34b9i.v03t2yiozio63cq6 --discovery-token-ca-cert-hash sha256:c21d04ea23790a0bf81cf64118e3a9075ffb63ed90bc697acef5793386e9eb16  Delete a deployment
kubectl delete deployment nginx-deployment-nbo  To get the logs of a specific container. -n is to specify the namespace</description>
    </item>
    
  </channel>
</rss>