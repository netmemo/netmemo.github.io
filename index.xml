<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>netmemo.github.io on netmemo.github.io</title>
    <link>https://netmemo.github.io/</link>
    <description>Recent content in netmemo.github.io on netmemo.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>No&amp;euml;l Boul&amp;egrave;ne &amp;copy; 2019. This blog is strictly personnal and opinions expressed here are only mine and doesn&amp;#39;t reflect those of my past, current or futur employers. No warranty whatsoever is made that any of the posts are accurate. There is absolutely no assurance (apart from authorï¿½s professional integrity) that any statement contained in a post is true, correct or precise.</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0200</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Terraform Refactoring State File</title>
      <link>https://netmemo.github.io/post/terraform-refactoring-state-file/</link>
      <pubDate>Thu, 25 Feb 2021 21:56:57 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/terraform-refactoring-state-file/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.terraform.io/docs/cli/commands/state/mv.html&#34; target=&#34;_blank&#34;&gt;https://www.terraform.io/docs/cli/commands/state/mv.html&lt;/a&gt;&lt;br /&gt;
On windows :&lt;br /&gt;
&lt;pre style=&#34;color:black&#34;&gt;
terraform state mv nsxt_policy_security_policy.policy1 nsxt_policy_security_policy.policies[\&amp;ldquo;policy1\&amp;ldquo;]
&lt;/pre&gt;
It move resources from a construct like this&lt;/p&gt;

&lt;pre style=&#34;color:black&#34;&gt;
locals {
  policy1= {
      rule1 = {
        source = [&#34;src1&#34;,&#34;src2&#34;]
      }
  }
  policy2 = {
      rule1 = {
        source = [&#34;src3&#34;,&#34;src4&#34;]
      }
  }
}
&lt;/pre&gt;
To a structure like this  
&lt;pre style=&#34;color:black&#34;&gt;
locals {
  policies = {
    policy1 = {
      rule1 = {
        source = [&#34;src1&#34;,&#34;src2&#34;]
      }
    }
    policy2 = {
      rule2 = {
        source = [&#34;src3&#34;,&#34;src4&#34;]
      }
    }
  }
}
&lt;/pre&gt;
The main moving from  
&lt;pre style=&#34;color:black&#34;&gt;
resource &#34;nsxt_policy_security_policy&#34; &#34;policy1&#34;{
  display_name = &#34;policy1&#34;
  category     = &#34;Environment&#34;
  dynamic &#34;rule&#34; {
    for_each = local.policy1
    content {
      source_groups = rule.value[&#34;sources&#34;]
    }
  }
}
resource &#34;nsxt_policy_security_policy&#34; &#34;policy2&#34;{
  display_name = &#34;policy2&#34;
  category     = &#34;Environment&#34;
  dynamic &#34;rule&#34; {
    for_each = local.policy2
    content {
      source_groups = rule.value[&#34;sources&#34;]
    }
  }
}
&lt;/pre&gt;
to
&lt;pre style=&#34;color:black&#34;&gt;
resource &#34;nsxt_policy_security_policy&#34; &#34;policies&#34; {
for_each = local.policies
  display_name = each.key
  category     = &#34;Environment&#34;
  dynamic &#34;rule&#34; {
    for_each = each.value
    content {
      source_groups = rule.value[&#34;sources&#34;]
    }
  }
}
&lt;/pre&gt;

&lt;p&gt;The terraform state moving fromfrom 2 resources to 1 resource with 2 instances&lt;br /&gt;
From
&lt;pre style=&#34;color:black&#34;&gt;
{
  &amp;ldquo;type&amp;rdquo;: &amp;ldquo;nsxt_policy_security_policy&amp;rdquo;,
  &amp;ldquo;name&amp;rdquo;: &amp;ldquo;policy1&amp;rdquo;
  &amp;ldquo;instances&amp;rdquo; : [
    {
      &amp;hellip;
    }
  ]
},
{
  &amp;ldquo;type&amp;rdquo;: &amp;ldquo;nsxt_policy_security_policy&amp;rdquo;,
  &amp;ldquo;name&amp;rdquo;: &amp;ldquo;policy2&amp;rdquo;
  &amp;ldquo;instances&amp;rdquo; : [
    {
      &amp;hellip;
    }
  ]
}
&lt;/pre&gt;
To
&lt;pre style=&#34;color:black&#34;&gt;
{
  &amp;ldquo;type&amp;rdquo;: &amp;ldquo;nsxt_policy_security_policy&amp;rdquo;,
  &amp;ldquo;name&amp;rdquo;: &amp;ldquo;policies&amp;rdquo;
  &amp;ldquo;instances&amp;rdquo; : [
    {
      &amp;ldquo;index_key&amp;rdquo;: &amp;ldquo;policy1&amp;rdquo;
    },
    {
      &amp;ldquo;index_key&amp;rdquo;: &amp;ldquo;policy2&amp;rdquo;
    }
  ]
}
&lt;/pre&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python Package Offline</title>
      <link>https://netmemo.github.io/post/python-package-offline/</link>
      <pubDate>Thu, 25 Feb 2021 21:46:14 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/python-package-offline/</guid>
      <description>&lt;p&gt;To install python packages offline (with no internet access), the simplest way is to dowload the packages with the dependencies on a server with internet access and the below command.&lt;/p&gt;

&lt;pre style=&#34;color:black&#34;&gt;
&lt;b&gt;C:\Users\Nono\Desktop\python&gt;pip download requests&lt;/b&gt;
Collecting requests  
  Using cached requests-2.25.1-py2.py3-none-any.whl (61 kB)  
Collecting urllib3&lt;1.27,&gt;=1.21.1  
  Using cached urllib3-1.26.3-py2.py3-none-any.whl (137 kB)  
Collecting certifi&gt;=2017.4.17  
  Using cached certifi-2020.12.5-py2.py3-none-any.whl (147 kB)  
Collecting idna&lt;3,&gt;=2.5  
  Using cached idna-2.10-py2.py3-none-any.whl (58 kB)  
Collecting chardet&lt;5,&gt;=3.0.2  
  Using cached chardet-4.0.0-py2.py3-none-any.whl (178 kB)  
Saved c:\users\nono\desktop\python\requests-2.25.1-py2.py3-none-any.whl  
Saved c:\users\nono\desktop\python\certifi-2020.12.5-py2.py3-none-any.whl  
Saved c:\users\nono\desktop\python\chardet-4.0.0-py2.py3-none-any.whl  
Saved c:\users\nono\desktop\python\idna-2.10-py2.py3-none-any.whl  
Saved c:\users\nono\desktop\python\urllib3-1.26.3-py2.py3-none-any.whl  
Successfully downloaded requests certifi chardet idna urllib3
&lt;/pre&gt;

&lt;p&gt;You then need to move all the files to the offline server in a directory and deploy the packages with the below command :&lt;/p&gt;

&lt;pre style=&#34;color:black&#34;&gt;
&lt;b&gt;pip install --no-index --find-links=file:C:\Users\Nono2\tools\python-modules\resquests requests&lt;/b&gt;
Looking in links: file:///C:\Users\nboulene\tools\python-modules\resquests  
Collecting requestsCollecting urllib3&lt;1.27,&gt;=1.21.1 (from requests)  
Collecting chardet&lt;5,&gt;=3.0.2 (from requests)  
Collecting idna&lt;3,&gt;=2.5 (from requests)Collecting certifi&gt;=2017.4.17 (from requests)  
Installing collected package: urllib3, chardet, idna, certifi, requests  
Successfully installed certifi-2020.12.5 chardet-4.0.0 idna-2.10 requests-2.25.1 urllib3-1.26.3
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>N5600 Buffering</title>
      <link>https://netmemo.github.io/post/n5600-buffering/</link>
      <pubDate>Tue, 23 Feb 2021 22:24:44 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/n5600-buffering/</guid>
      <description>

&lt;h4 id=&#34;qos-voq&#34;&gt;QoS VOQ&lt;/h4&gt;

&lt;p&gt;On N5K, In the case of unicast traffic, VOQ is an ingress buffer pool for 3 ingress port (1 ASIC). This buffer pool is split into n x reservable buffer of the size configured in the voq-limit command.If the ingress buffer is 16000 and the VOQ limit is 1024, that mean 16 flow can reserv buffers.When the shared buffer is exausted, the dedicated ingress buffer per port is used then when it&amp;rsquo;s full, the packet is droped.&lt;/p&gt;

&lt;p&gt;VOQ is reservable per egress port per class (pair).With small VOQ limit, there is lot of buffer available for non congested flow. With no VOQ limit, a congested port can use up to 50% of the total shared memory and those, 2 congested port can exaust all the ingress resources of an ASIC (3 ingress port) and drop can happen on this ASIC&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ciscolive.com/c/dam/r/ciscolive/us/docs/2015/pdf/BRKDCT-3100.pdf&#34; target=&#34;_blank&#34;&gt;https://www.ciscolive.com/c/dam/r/ciscolive/us/docs/2015/pdf/BRKDCT-3100.pdf&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.ciscolive.com/c/dam/r/ciscolive/us/docs/2017/pdf/BRKDCN-3346.pdf&#34; target=&#34;_blank&#34;&gt;https://www.ciscolive.com/c/dam/r/ciscolive/us/docs/2017/pdf/BRKDCN-3346.pdf&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.cisco.com/c/en/us/support/docs/switches/nexus-6000-series-switches/200401-Nexus-5600-6000-Understanding-and-Troub.html&#34; target=&#34;_blank&#34;&gt;https://www.cisco.com/c/en/us/support/docs/switches/nexus-6000-series-switches/200401-Nexus-5600-6000-Understanding-and-Troub.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In case of a Nexus 5600. 1 ASIC = 3 * 40Gb or 12*10G ports. Cells are the units in which buffers are allocated. One cell is 320 Bytes. ASIC Ingress buffer size : 48840 of available total cells (16M), shared among all 3x40Gb ports. Egress buffer is 9Mb (dedicated buffer per ASIC).&lt;br /&gt;
VOQ. ingress per output port/class queues. E.g with 114 ports on the switch with 8 queues there would be 1152 VOQs.On N5600 Buffer can be shared accrod port and classes, giving more burst absorption capacity.&lt;/p&gt;

&lt;h4 id=&#34;default-buffer-allocation&#34;&gt;Default buffer allocation&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;minimum fixed buffer of 312 cells (100KB) is reserved per class (up to 8 classes) per ingress port, rest of the buffer is shared. This is done to guarantee minimum performance.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If there is only 1 class (the class-default for instance), there is only a single fixed/dedicated buffer per port.&lt;br /&gt;
- 44,331 cells of shared buffer available for data traffic for all ports. shared buffer is used first.&lt;br /&gt;
- any drop class can access half of the shared buffer- no-drop class (eg fcoe) can access complete shared buffer.&lt;br /&gt;
- &amp;ldquo;queue-limit&amp;rdquo; under &amp;ldquo;network-qos&amp;rdquo; policy specifies the dedicated buffer for each port and each class. The dedicated buffer can be used by the port for only that class of service.&lt;/p&gt;

&lt;h4 id=&#34;voq-limit&#34;&gt;voq-limit&lt;/h4&gt;

&lt;p&gt;Command &amp;ldquo;hardware unicast voq-limit [threshold &amp;hellip;]&amp;rdquo;
enabling voq-limit turns on a shared buffer threshold per each voq.&lt;br /&gt;
limits the amount of buffers usable on the ingress interface, for packets headed towards a specific VoQ (&amp;ldquo;egress port, class&amp;rdquo; pair). Drops happens per VOQ, when its packet in ingress buffer exceed threshold: when the traffic ingress on a port and it consumes all 1024 cells, it will get dropped as discards.&lt;/p&gt;

&lt;p&gt;when the second flow traffic comes in, it will tage another 1024 cells as well but in a different VOQ and will not get dropped; this way voq thresholding prevents the non-congested egress port traffic drop.&lt;/p&gt;

&lt;h4 id=&#34;hold-mitigation-and-voq-thresholding&#34;&gt;HOLD mitigation and VOQ thresholding&lt;/h4&gt;

&lt;p&gt;Below is discussed for scenario without voq-limit enabledCongestion on one egress port in one CoS eventually bleeds into the congestion of its corresponding VOQ on the ingress port. Once the limit is reached then traffic gets dropped.&lt;/p&gt;

&lt;p&gt;On N5600 ASIC Buffers are allocated per ingress port and are shared by all the egress ports that are seeing traffic from this ingressport.&lt;br /&gt;
A stuck or slow-draining egress port can causse all buffers on one or more ingress ports that are senfing traffic to the egress port to be exhausted, thereby affecting all traffic on these ingress port. This is Head of Line Blocking (HOLB) problem.&lt;br /&gt;
To avoid this scenario, the VOQ for unicast traffic may be configured with a voq-limit threshold, at which point the port will stop accepting any more packets for congested destination (drops the packets or pauses the affected class for non-drop class type). When the queue length decrease and goes below another threshold, the VOQ starts accepting packets again.&lt;br /&gt;
By default VOQ Thresholding is disabled for all classes.&lt;/p&gt;

&lt;h4 id=&#34;questions&#34;&gt;Questions&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;About the limit of 8000 cells, why not setting directly 16000 or removeing the limitation ?&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Setting larger voq-limit increases the change to improve burst absorption but also leaves non-congested VOQs to be more likely affected by congested VOQs (as the latter can dip more into shared buffer).Disadvantage of having a voq-limit is that when we have a burst traffic comming in (like for distributed storage/VSAN), it connot use more than configured threshold of allocated cells and the bursty flow will have drops even though there is un-used ingress buffer.It&amp;rsquo;s recommanded to remove voq-limit in case of bursty traffic.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Are the VoQ per UPC or per ingress interface ?&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;VOQs are per class per egress interface. E.g. With 114 ports on the switch with 8 queues there would be 1152 VOQs per port.If there is only 1 class (class-defauklt), the number of VOQ is matching the number of egress ports.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Our undestanding is that if we remove the command voq limit, we might have HOLB while with the command it&amp;rsquo;s not possible. Could you explain how is this possible to have HOLD if VoQ is always used ?&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This can happen because VOQ Thresholding (voq-limit) is not enabled by default. Therefore, each VOQ can borrow from shared buffer and some of non-congested VOQs would not be able to handle traffic due to lack of buffer space, even though they are not congested.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Effect of changing or removing VOQ-limit on the traffic.&lt;br /&gt;
There would be subsecond traffic interruption on all ports.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Effect of changing or removing VOQ-Limit on the FEX.&lt;br /&gt;
There should not be any effect on the FEX operation&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Could you describe the difference in the behavior of buffers (shared, ingress dedicated per port, voq per cos, drop) with the command voq limit default, with the command voq limit configured with the max value, and without the voq limit command ?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A. Without voq-limitShared - used by all ingress ports by default. 3*40G (or) 12*10G ports compete for usage, when per-port buffers are exhausted.Dedicated - samll, reserved per port per class. Can be adjusted with queue-limit command.VOQ drop thresholds are disabled.Shared is used first, only then overflow to dedicated.One drop class per ASIC can take up to half if the shared buffer.If congestion is constant, it can result in blocking for other VOQs in the same ingress port.Slow draining port can affect others by consuming shared and dedicated buffers.ExempleUnicast traffic coming on a 40G ingress port and egress port are 2x10G. When one of the egress port 10G is congested, it moght be possible that a new ingress flow from this 40G interface to another 10G interface can get affected as well because of non-availability of the ingress buffer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;n5600-buffering.png&#34; alt=&#34;N5600 Buffers&#34; /&gt;&lt;/p&gt;

&lt;p&gt;When the traffic ingress on a port it first fills the shared buffer. Each flow can take up ti 50% of the total shared buffer available (22200 cells or ~7.1MB). After filling 50% of the buffer the same flow will utilize the per-port fixed buffer.When the new flow comes ingress on that port, it tries to fill in the 50% of shared buffer but if shared and per-port buffer are already filled, this traffic would be dropped.We can avoir the new flow, that is goignt o different no-congested port, from getting dropped by enabling VOQ thresholding.&lt;/p&gt;

&lt;p&gt;B. With voq-limit default value 1024Drop happend per VOQ, each limited by 1024 cells.Congestion in one VOQ has minimal chances to affect other VOQsVOQ drop thresholds are minimal, so burst traffic flow coming in it cannot use more than 1024 allocated cells and will have drops even though there is un-used buffer.when the traffic ingress on a port consumes all 1024 cells, it will get dropped as discards.When the second flow traffic with destination to another egress port comes in, it may consume 1024 cells as well but a different VOQ- so will not get dropped.&lt;/p&gt;

&lt;p&gt;C. with voq-limit default value 16384drop happens per VOQ, each limited by 16384 cells.congestion in one VOQ does not affect other VOQs if there is enough shared buffer left.VOQ drop thresholds are at maximum.Burst traffic flow coming can use up to 16384 allocated cells and will have drop everything above it. Other VOQs buffering at the same instance can use remaining buffer (but nor more than 16384each). In theory, 3 VOQs, that are fully congested at the same time, could take all the buffer. It is very difficult to prefict instant buffer usage due to unpredictable nature of bursty flows, so exact values should be taken from production, e.g. Try with 16384 and reduce the threshold if negative impact is seen on non-congested flows.&lt;/p&gt;

&lt;h4 id=&#34;couple-of-solutions-to-resolve-bursty-trafic-drop&#34;&gt;Couple of  solutions to resolve bursty trafic drop:&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Remove VOQ limit completel (heavy burst trafic)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Increase VOQ Threshold to 8000 or 16384 (max) and monitor the situation with discards=&amp;gt; show hardware profile buffer monitor interface ethernet&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Spread congested links betweek different ASICs.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Implement policing of the traffic.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Terraform nested for_each for NSX-T with dynamic</title>
      <link>https://netmemo.github.io/post/tf-nsxt-nested-for-each/</link>
      <pubDate>Fri, 19 Feb 2021 22:06:50 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/tf-nsxt-nested-for-each/</guid>
      <description>&lt;p&gt;The below post show how to create security policy groups for NSX-T with Terraform nested for_each loop and dynamic.&lt;br /&gt;
The variables are made from one map of list. Each list represent one group composed of tags.&lt;br /&gt;
&lt;a href=&#34;https://www.hashicorp.com/blog/hashicorp-terraform-0-12-preview-for-and-for-each&#34; target=&#34;_blank&#34;&gt;https://www.hashicorp.com/blog/hashicorp-terraform-0-12-preview-for-and-for-each&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;variable &amp;quot;mapgroups&amp;quot; {
  type      = map
  default   = {
    NBO         = [&amp;quot;NBO&amp;quot;]
    NBO-PROD    = [&amp;quot;NBO&amp;quot;,&amp;quot;PROD&amp;quot;]
  }
}


resource &amp;quot;nsxt_policy_group&amp;quot; &amp;quot;nbogroups&amp;quot; {
  for_each      = var.mapgroups

  display_name  = each.key
  criteria {

    dynamic &amp;quot;condition&amp;quot; {
      for_each = each.value

      content {
        key         = &amp;quot;Tag&amp;quot;
        member_type = &amp;quot;VirtualMachine&amp;quot;
        operator    = &amp;quot;EQUALS&amp;quot;
        value       = condition.value
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Create portable Terraform and plugins with Terraform-bundle for Windows</title>
      <link>https://netmemo.github.io/post/tf-bundle-windows/</link>
      <pubDate>Wed, 17 Feb 2021 21:32:37 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/tf-bundle-windows/</guid>
      <description>

&lt;p&gt;The below steps are what I did to create a terraform-bundle to use terraform with non default providers on a server that doesn&amp;rsquo;t have access to Internet. You can find the tool explanation in the below link.&lt;br /&gt;
&lt;a href=&#34;https://github.com/hashicorp/terraform/tree/master/tools/terraform-bundle&#34; target=&#34;_blank&#34;&gt;https://github.com/hashicorp/terraform/tree/master/tools/terraform-bundle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;installation of golang with msi downloaded here&lt;br /&gt;
&lt;a href=&#34;https://golang.org/doc/install&#34; target=&#34;_blank&#34;&gt;https://golang.org/doc/install&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clone the terraform repository to get the tool&lt;br /&gt;
&lt;a href=&#34;https://github.com/hashicorp/terraform.git&#34; target=&#34;_blank&#34;&gt;https://github.com/hashicorp/terraform.git&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd terraform-master
go install .\tools\terraform-bundle
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;check-the-terraform-version&#34;&gt;Check the terraform version&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\noyel\Desktop\tfforeach\nsxt&amp;gt;terraform version
Terraform v0.14.6
+ provider registry.terraform.io/vmware/nsxt v3.0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;create-a-terraform-bundle-hcl-file&#34;&gt;Create a terraform-bundle.hcl file&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;terraform {
  # Version of Terraform to include in the bundle. An exact version number
  # is required.
  version = &amp;quot;0.14.6&amp;quot;
}

# Define which provider plugins are to be included
providers {
  # Include the newest &amp;quot;nsxt&amp;quot; provider version in the 1.0 series.
  nsxt = {
    source = &amp;quot;vmware/nsxt&amp;quot;
    versions = [&amp;quot;~&amp;gt; 3.0.0&amp;quot;]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;create-the-bundle&#34;&gt;Create the bundle&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\noyel\Desktop\tfforeach\nsxt&amp;gt;terraform-bundle package terraform-bundle.hcl
Fetching Terraform 0.14.6 core package...
Local plugin directory &amp;quot;.plugins&amp;quot; found; scanning for provider binaries.
No &amp;quot;.plugins&amp;quot; directory found, skipping local provider discovery.
- Finding vmware/nsxt versions matching &amp;quot;~&amp;gt; 3.0.0&amp;quot;...
- Installing vmware/nsxt v3.0.1...
Creating terraform_0.14.6-bundle2021021713_windows_amd64.zip ...
All done!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Move the zip file to the server you want to use it. Unzip the file. For a basic utilization move the terraform.exe and plugins in the directory where your terraform files are.&lt;/p&gt;

&lt;h4 id=&#34;the-provider-tf-file-looks&#34;&gt;The provider.tf file looks&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;terraform {
  required_providers {
    nsxt = {
      source = &amp;quot;vmware/nsxt&amp;quot;
      version = &amp;quot;3.0.1&amp;quot;
    }
  }
}

provider &amp;quot;nsxt&amp;quot; {
   host = &amp;quot;1.2.3.4&amp;quot;
   username   = &amp;quot;admin&amp;quot;
   password   = &amp;quot;123&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When initialize Terraform with the init command, specify the plugins directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\bubibi\terraform\terraform init -plugin-dir=C:\Users\bubibi\terraform\plugins

Terraform has been successfuly initialized!
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Using Terraform for_each to create subnets in AWS VPC</title>
      <link>https://netmemo.github.io/post/tf-for-each/</link>
      <pubDate>Wed, 17 Feb 2021 20:59:49 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/tf-for-each/</guid>
      <description>

&lt;p&gt;An extended explanation of the differences between for_each, for and count can be find on the below link&lt;br /&gt;
&lt;a href=&#34;https://blog.gruntwork.io/terraform-tips-tricks-loops-if-statements-and-gotchas-f739bbae55f9&#34; target=&#34;_blank&#34;&gt;https://blog.gruntwork.io/terraform-tips-tricks-loops-if-statements-and-gotchas-f739bbae55f9&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The two main drawback of using count are :&lt;br /&gt;
- Can&amp;rsquo;t be used to loop over inline blocks&lt;br /&gt;
- Difficult to remove entry from a list because it change the index and those Terraform may want to destroy same resource with different index&lt;/p&gt;

&lt;p&gt;Below are the an exemple of the variables used to create subnets within AWS VPCs and the main file with the for_each.
The variables contain a map of subnets maps with cidr and az (availability zone) attributes.
The for_each loop over the map of subnets maps to create the subnets.&lt;/p&gt;

&lt;h4 id=&#34;variables-tf&#34;&gt;variables.tf&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;variable &amp;quot;tag_name&amp;quot; {
   default = &amp;quot;main-vpc&amp;quot;
}

variable &amp;quot;vpc-cidr&amp;quot; {
   default = &amp;quot;10.0.0.0/16&amp;quot;
}

variable &amp;quot;basename&amp;quot; {
   description = &amp;quot;Prefix used for all resources names&amp;quot;
   default = &amp;quot;nbo&amp;quot;
}

#map of maps for create subnets
variable &amp;quot;prefix&amp;quot; {
   type = map
   default = {
      sub-1 = {
         az = &amp;quot;use2-az1&amp;quot;
         cidr = &amp;quot;10.0.198.0/24&amp;quot;
      }
      sub-2 = {
         az = &amp;quot;use2-az2&amp;quot;
         cidr = &amp;quot;10.0.199.0/24&amp;quot;
      }
      sub-3 = {
         az = &amp;quot;use2-az3&amp;quot;
         cidr = &amp;quot;10.0.200.0/24&amp;quot;
      }
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;main-tf&#34;&gt;main.tf&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;resource &amp;quot;aws_vpc&amp;quot; &amp;quot;main-vpc&amp;quot; {
  cidr_block = var.vpc-cidr

  tags = {
    Name = var.tag_name
  }
}

resource &amp;quot;aws_subnet&amp;quot; &amp;quot;main-subnet&amp;quot; {
  for_each = var.prefix
 
  availability_zone_id = each.value[&amp;quot;az&amp;quot;]
  cidr_block = each.value[&amp;quot;cidr&amp;quot;]
  vpc_id     = aws_vpc.main-vpc.id

  tags = {
    Name = &amp;quot;${var.basename}-subnet-${each.key}&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can find the output of the terraform plan/apply, the terraform.state and the others tf files in the below links.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/netmemo/tf-for-each-exemple&#34; target=&#34;_blank&#34;&gt;https://github.com/netmemo/tf-for-each-exemple&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BFD on directly connected</title>
      <link>https://netmemo.github.io/post/bfd-directly-connected/</link>
      <pubDate>Wed, 02 Dec 2020 09:29:50 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/bfd-directly-connected/</guid>
      <description>&lt;p&gt;One article that can help understanding and make decisions about fast failover
&lt;a href=&#34;https://blog.ipspace.net/2020/11/detecting-network-failure.html&#34; target=&#34;_blank&#34;&gt;https://blog.ipspace.net/2020/11/detecting-network-failure.html&lt;/a&gt;
&lt;a href=&#34;https://blog.ipspace.net/2012/09/do-we-need-lacp-and-udld.html&#34; target=&#34;_blank&#34;&gt;https://blog.ipspace.net/2012/09/do-we-need-lacp-and-udld.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Is there any benefit by enabling BFD on directly connected interface ?&lt;/p&gt;

&lt;p&gt;Sometime it can be enabled to help veryfied that there are no issues on physical layer and data link layer of an interface. It can help if on the data link layer you are not using UDLD or LACP.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ACI from an other angle</title>
      <link>https://netmemo.github.io/post/aci-other-angle/</link>
      <pubDate>Sat, 28 Nov 2020 19:11:36 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/aci-other-angle/</guid>
      <description>

&lt;h3 id=&#34;several-of-these-protocols-are-standards&#34;&gt;&amp;ldquo;Several of these protocols are standards&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;My undestanding is that even if the protocols looks standard, Cisco did some modification on them : VXLAN (fiels to transport ACI Policies), ISIS (added the multidestination tree) and hence are note standard anymore.&lt;/p&gt;

&lt;h3 id=&#34;does-it-require-proprietary-server&#34;&gt;&amp;ldquo;Does it require proprietary server ?&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;Not prorietary servers but proprietary switches&amp;hellip;So you are locked in regarding the software and the hardware. Both can&amp;rsquo;t be decoupled. If you choose to move to another switch vendor, you need to change the hardware and sart learnong new software and protocols skills. Previously while you probably still need to change the softwar and the hardware, you didn&amp;rsquo;t need to learn everything from scratch regarding the protocols.&lt;br /&gt;
In the past with Fabric Path, I&amp;rsquo;ve already had issues by beeing locked-in with both. When Cisco will end up the support, you then need to change the hardware and learn new software/protocols skills.&lt;/p&gt;

&lt;h3 id=&#34;security-lock-in&#34;&gt;Security lock-in&lt;/h3&gt;

&lt;p&gt;There is one more lock-in, this is regarding the security policies in ACI. If you use the Cisco Application Centric mode, it&amp;rsquo;s even worst, the day were Cisco will decide it&amp;rsquo;s not bankable anymore and start moving away from if, you will need to migrate the hardware, learn new software, new protocols and migrate the security to something completly different.&lt;br /&gt;
For certain organisation, that will be a nightmare and probably cost more money than investing regulary in people.&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t want to use the Application Centric mode and just use the eNetwork Centruc mode, you still have an expensive solution with lot of options you will pay for but never use. Moreover you will inherit all the software complexity and associated bugs for features that are useless for you.&lt;/p&gt;

&lt;h3 id=&#34;summ-up&#34;&gt;Summ up&lt;/h3&gt;

&lt;p&gt;Standard Protocols not so standard:&lt;br /&gt;
    ISIS (Multidestination tree ftag)&lt;br /&gt;
    BGP for multi site&lt;br /&gt;
    VXLAN (Field to transport ACI policies)&lt;/p&gt;

&lt;p&gt;Proprietary Protocols&lt;br /&gt;
    COOP&lt;/p&gt;

&lt;p&gt;Very little public documentation&lt;/p&gt;

&lt;p&gt;Lock in : Hardware, software, security&lt;br /&gt;
    Previously : some features or knobs were proprietary or tie to hardware but not the all system&lt;br /&gt;
    =&amp;gt; EIGRP, software lock in but you can ignore it if you want&lt;br /&gt;
    =&amp;gt; FP at the time of the launch no other option were  standard&lt;/p&gt;

&lt;p&gt;Software complexity due to all the feature you don&amp;rsquo;t want + software has been think to be application aware and even if you don&amp;rsquo;t want to use it, you will anyway inherit the code complexity of it.&lt;/p&gt;

&lt;p&gt;Everything centralise in a box right in the middle of the data path (Spine COOP devices).&lt;/p&gt;

&lt;p&gt;Stopped product:&lt;br /&gt;
&lt;ul&gt;
&lt;li&gt; Loadbalancing : ACE/CSS  &lt;/li&gt;
&lt;li&gt; Fabric Path  &lt;/li&gt;
&lt;li&gt; Ironport ?  &lt;/li&gt;
&lt;li&gt; iWAN  &lt;/li&gt;
&lt;li&gt; VPn Concentrator  &lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;You need EVPN anyway for multisite.&lt;/p&gt;

&lt;p&gt;You need automation anyway because it&amp;rsquo;s too complex to manage via the GUI and you want to standardise all the conf.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arista basic ISIS-SR</title>
      <link>https://netmemo.github.io/post/aristabasesr/</link>
      <pubDate>Tue, 24 Nov 2020 18:12:05 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/aristabasesr/</guid>
      <description>

&lt;h3 id=&#34;isis-segment-routing-basics-for-arista-eos&#34;&gt;ISIS Segment routing basics for Arista EOS&lt;/h3&gt;

&lt;p&gt;References:&lt;br /&gt;
&lt;a href=&#34;https://www.arista.com/en/um-eos/eos-section-35-3-is-is-segment-routing&#34; target=&#34;_blank&#34;&gt;https://www.arista.com/en/um-eos/eos-section-35-3-is-is-segment-routing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;aristabasesr.png&#34; alt=&#34;arista isis sr&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;srgb&#34;&gt;SRGB&lt;/h4&gt;

&lt;p&gt;Segment Routing Golbal Block&lt;/p&gt;

&lt;h4 id=&#34;prefix-sid&#34;&gt;Prefix-SID&lt;/h4&gt;

&lt;p&gt;It&amp;rsquo;s global and unique. It identify a prefix. It&amp;rsquo;s called anycast SID when it&amp;rsquo;s send by a group of router.&lt;/p&gt;

&lt;h4 id=&#34;node-sid&#34;&gt;Node-SID&lt;/h4&gt;

&lt;p&gt;It&amp;rsquo;s global and unique. Only one per node. It identify the node.&lt;/p&gt;

&lt;h4 id=&#34;adjacent-sid&#34;&gt;Adjacent-SID&lt;/h4&gt;

&lt;p&gt;It&amp;rsquo;s local and can use a dynamique range. It&amp;rsquo;s used to identify an interconnection between 2 nodes.&lt;br /&gt;
With Arista EOS 4.23 it&amp;rsquo;s automaticaly allocated from the isis dynamic range &lt;strong&gt;show mpls label ranges&lt;/strong&gt;.&lt;/p&gt;

&lt;h4 id=&#34;basic-config-for-arista&#34;&gt;Basic config for ARISTA&lt;/h4&gt;

&lt;p&gt;I have added the prefix-sid to test it end to end between the VPC but actually it can work without the prefix-sid. In the next article I will add the L3 VPN on top of SR without using prefix-sid
In bold you find the ISIS-SR specific command require to enable ISIS-SR&lt;/p&gt;

&lt;h5 id=&#34;r1&#34;&gt;R1&lt;/h5&gt;

&lt;pre style=&#34;color:black&#34;&gt;
interface Loopback1
   ip address 1.1.1.1/32
   &lt;b&gt;node-segment ipv4 index 1&lt;/b&gt;
   isis enable ISIS-SR
!

interface Ethernet1
   no switchport
   ip address 10.10.12.1/24
   isis enable ISIS-SR
!
interface Ethernet2
   no switchport
   ip address 10.10.10.1/24
   isis enable ISIS-SR
!
ip routing
!
mpls ip
!

router isis ISIS-SR
   net 10.0000.0010.0100.1001.00
   is-type level-2
   !
   address-family ipv4 unicast
   !
   &lt;b&gt;segment-routing mpls &lt;/b&gt; 
      &lt;b&gt;no shutdown&lt;/b&gt;
      prefix-segment 10.10.10.0/24 index 51
!
&lt;/pre&gt;

&lt;h5 id=&#34;r2&#34;&gt;R2&lt;/h5&gt;

&lt;pre style=&#34;color:black&#34;&gt;
interface Loopback1
   ip address 2.2.2.2/32
   &lt;b&gt;node-segment ipv4 index 2&lt;/b&gt;
   isis enable ISIS-SR
!

interface Ethernet1
   no switchport
   ip address 10.10.12.2/24
   isis enable ISIS-SR
!

interface Ethernet2
   no switchport
   ip address 10.10.23.2/24
   isis enable ISIS-SR
!

ip routing
!
mpls ip
!

router isis ISIS-SR
   net 10.0000.0020.0200.2002.00
   is-type level-2
   !
   address-family ipv4 unicast
   !
   &lt;b&gt;segment-routing mpls&lt;/b&gt;
      &lt;b&gt;no shutdown&lt;/b&gt;
!
&lt;/pre&gt;

&lt;h5 id=&#34;r3&#34;&gt;R3&lt;/h5&gt;

&lt;pre style=&#34;color:black&#34;&gt;
interface Loopback1
   ip address 3.3.3.3/32
   &lt;b&gt;node-segment ipv4 index 3&lt;/b&gt;
   isis enable ISIS-SR
!

interface Ethernet1
   no switchport
   ip address 10.10.23.3/24
   isis enable ISIS-SR
!
interface Ethernet2
   no switchport
   ip address 10.10.30.1/24
   isis enable ISIS-SR
!
ip routing
!
mpls ip
!

router isis ISIS-SR
   net 10.0000.0030.0300.3003.00
   is-type level-2
   !
   address-family ipv4 unicast
   !
   &lt;b&gt;segment-routing mpls&lt;/b&gt;
      &lt;b&gt;no shutdown&lt;/b&gt;
      prefix-segment 10.10.30.0/24 index 53
!
&lt;/pre&gt;

&lt;h3 id=&#34;show-commands&#34;&gt;show commands&lt;/h3&gt;

&lt;pre style=&#34;color:black&#34;&gt;
&lt;b&gt;R1#show isis segment-routing&lt;/b&gt;

System ID: R1                   Instance: ISIS-SR
SR supported Data-plane: MPLS                   SR Router ID: 1.1.1.1
SR Global Block( SRGB ): Base: 900000           Size: 65536           
Adj-SID allocation mode: SR-adjacencies
Adj-SID allocation pool: Base: 100000     Size: 16384

All Prefix Segments have    : P:0 E:0 V:0 L:0
IS-IS Reachability Algorithm : SPF (0)

Number of IS-IS segment routing capable peers: 2

Self-Originated Segment Statistics:
Node-Segments       : 1
Prefix-Segments     : 1
Proxy-Node-Segments : 0
Adjacency Segments  : 1
&lt;/pre&gt;

&lt;pre style=&#34;color:black&#34;&gt;
&lt;b&gt;R1#show mpls segment-routing bindings&lt;/b&gt;

1.1.1.1/32
   Local binding:  Label: imp-null
   Remote binding: Peer ID: 0020.0200.2002, Label: 900001
2.2.2.2/32
   Local binding:  Label: 900002
   Remote binding: Peer ID: 0020.0200.2002, Label: imp-null
3.3.3.3/32
   Local binding:  Label: 900003
   Remote binding: Peer ID: 0020.0200.2002, Label: 900003
10.10.10.0/24
   Local binding:  Label: imp-null
   Remote binding: Peer ID: 0020.0200.2002, Label: 900051
10.10.30.0/24
   Local binding:  Label: 900053
   Remote binding: Peer ID: 0020.0200.2002, Label: 900053
&lt;/pre&gt;

&lt;pre style=&#34;color:black&#34;&gt;
&lt;b&gt;R1#show isis segment-routing prefix-segments&lt;/b&gt;

System ID: 0010.0100.1001                       Instance: &#39;ISIS-SR&#39;
SR supported Data-plane: MPLS                   SR Router ID: 1.1.1.1

Node: 3      Proxy-Node: 0      Prefix: 2       Total Segments: 5

Flag Descriptions: R: Re-advertised, N: Node Segment, P: no-PHP
                   E: Explicit-NULL, V: Value, L: Local
Segment status codes: * - Self originated Prefix, L1 - level 1, L2 - level 2
  Prefix                      SID Type       Flags                   System ID       Level Protection
  ------------------------- ----- ---------- ----------------------- --------------- ----- ----------
* 1.1.1.1/32                    1 Node       R:0 N:1 P:0 E:0 V:0 L:0 0010.0100.1001  L2    unprotected
  2.2.2.2/32                    2 Node       R:0 N:1 P:0 E:0 V:0 L:0 0020.0200.2002  L2    unprotected
  3.3.3.3/32                    3 Node       R:0 N:1 P:0 E:0 V:0 L:0 0030.0300.3003  L2    unprotected
* 10.10.10.0/24                51 Prefix     R:0 N:0 P:0 E:0 V:0 L:0 0010.0100.1001  L2    unprotected
  10.10.30.0/24                53 Prefix     R:0 N:0 P:0 E:0 V:0 L:0 0030.0300.3003  L2    unprotected
&lt;/pre&gt;

&lt;pre style=&#34;color:black&#34;&gt;
&lt;b&gt;R1#show isis segment-routing adjacency-segments&lt;/b&gt;

System ID: R1                   Instance: ISIS-SR
SR supported Data-plane: MPLS                   SR Router ID: 1.1.1.1
Adj-SID allocation mode: SR-adjacencies
Adj-SID allocation pool: Base: 100000     Size: 16384
Adjacency Segment Count: 1
Flag Descriptions: F: Ipv6 address family, B: Backup, V: Value
                   L: Local, S: Set

Segment Status codes: L1 - Level-1 adjacency, L2 - Level-2 adjacency, P2P - Point-to-Point adjacency, LAN - Broadcast adjacency

Locally Originated Adjacency Segments
Adj IP Address  Local Intf     SID   SID Source                 Flags     Type  
--------------- ----------- ------- ------------ --------------------- -------- 
    10.10.12.2         Et1  100000      Dynamic   F:0 B:0 V:1 L:1 S:0   LAN L2  

 Protection 
----------- 
unprotected 
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Bgp Multipath</title>
      <link>https://netmemo.github.io/post/bgp-multipath/</link>
      <pubDate>Mon, 11 May 2020 08:02:21 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/bgp-multipath/</guid>
      <description>

&lt;h3 id=&#34;maximum-path&#34;&gt;Maximum path&lt;/h3&gt;

&lt;p&gt;In the RIB + FIB ECMP (multipath)&lt;/p&gt;

&lt;p&gt;Is PIC supported by default ?&lt;br /&gt;
&lt;a href=&#34;https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_bgp/configuration/xe-3s/irg-xe-3s-book/irg-bgp-mp-pic.html&#34; target=&#34;_blank&#34;&gt;https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_bgp/configuration/xe-3s/irg-xe-3s-book/irg-bgp-mp-pic.html&lt;/a&gt;&lt;br /&gt;
=&amp;gt; With BGP Multipath, the BGP prefix-independant convergence (PIC) feature is supported&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ins&gt; Attribut that should be identical &lt;/ins&gt;&lt;/strong&gt;&lt;br /&gt;
- Weight&lt;br /&gt;
- LP&lt;br /&gt;
- AS Path (AS Number unless relax us used, AS length)&lt;br /&gt;
- Origin Code&lt;br /&gt;
- MED&lt;br /&gt;
- IGP Metric Next hop should be different&lt;/p&gt;

&lt;h3 id=&#34;add-path&#34;&gt;Add Path&lt;/h3&gt;

&lt;p&gt;If the path are equal, allow to advertise more than one bes oath (need to test in eBGP).&lt;br /&gt;
Mostly used with BGP without MPLS. If MPLS is used it&amp;rsquo;s better to have an RD different for each VRF of each router (easier to troubleshoot).&lt;br /&gt;
&lt;a href=&#34;https://orhanergun.net/wp-content/uploads/2019/11/BGP-Add-path-vs-Shadow-RR-vs-Shadow-Session-vs-Unique-RD.pdf&#34; target=&#34;_blank&#34;&gt;https://orhanergun.net/wp-content/uploads/2019/11/BGP-Add-path-vs-Shadow-RR-vs-Shadow-Session-vs-Unique-RD.pdf&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;pic&#34;&gt;PIC&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ciscolive.com/c/dam/r/ciscolive/us/docs/2016/pdf/BRKRST-3321.pdf&#34; target=&#34;_blank&#34;&gt;https://www.ciscolive.com/c/dam/r/ciscolive/us/docs/2016/pdf/BRKRST-3321.pdf&lt;/a&gt;
I don&amp;rsquo;t neded it at the moment because we don&amp;rsquo;t need this level if convergence (couple of minutes vs ms if you have hundres of thousand of prefixes)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.ipspace.net/2012/01/prefix-independent-convergence-pic.html&#34; target=&#34;_blank&#34;&gt;https://blog.ipspace.net/2012/01/prefix-independent-convergence-pic.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The generic optimization of the RIB-to-FIB update process is known as Prefix-Independent Convergence (PIC) - if the routing protocols can pre-compute alternate paths, suitably designed FIB can use that information to cache alternate next hops. Updating such a FIB no longer involves numerous updates to individual prefixes; you have to change only the next hop reachability information.&lt;/p&gt;

&lt;h3 id=&#34;best-external&#34;&gt;Best External&lt;/h3&gt;

&lt;p&gt;Allow a router to advertise it&amp;rsquo;s best external path even if in it&amp;rsquo;s BGP table it does have a beter route from inside&lt;/p&gt;

&lt;h3 id=&#34;label-allocation&#34;&gt;LABEL ALLOCATION&lt;/h3&gt;

&lt;h5 id=&#34;per-vrf&#34;&gt;Per VRF&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;&lt;ins&gt; Cons &lt;/ins&gt;&lt;/strong&gt;&lt;br /&gt;
- IP Lookup needed after label lookup (can be a benefit, cf route sum issue)&lt;br /&gt;
- No granular load balancing because the bottom label is the same for all prefixes, if platform load balances on bottom label&lt;br /&gt;
- Potential forwarding loop during local traffic diversion to support PIC (Transient loop)&lt;br /&gt;
- No support for EIBGP multipath&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ins&gt; Pros &lt;/ins&gt;&lt;/strong&gt;&lt;br /&gt;
- 1 label per vrf (less label used)&lt;/p&gt;

&lt;h5 id=&#34;per-ce&#34;&gt;Per CE&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;&lt;ins&gt; Cons &lt;/ins&gt;&lt;/strong&gt;&lt;br /&gt;
- No granular load balancing because the bottom label is the same for all prefixes from one CE, if platform load balances on bottom label&lt;br /&gt;
- eBGPload balancing &amp;amp; BGP PIC is not supported (it makes usage of label diversity), unless resilient per-ce label&lt;br /&gt;
- Only single hop eBGPsupported, no multihop&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ins&gt; Pros &lt;/ins&gt;&lt;/strong&gt;&lt;br /&gt;
- No IP lookup needed after label lookup&lt;br /&gt;
- Per-CE : one MPLS label per next-hop (so per connected CE router)(Number of MPLS labels used is very low)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to hugo</title>
      <link>https://netmemo.github.io/post/how-to-hugo/</link>
      <pubDate>Mon, 11 May 2020 08:00:11 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/how-to-hugo/</guid>
      <description>&lt;p&gt;prerequis :
 - github desktop
 - hugo&lt;/p&gt;

&lt;p&gt;config.toml =&amp;gt; need to be modify to change the copyright date&lt;/p&gt;

&lt;p&gt;lancer cmd&lt;/p&gt;

&lt;p&gt;Go to the folder blog : C:\Users\noyel\Documents\Site\blog&amp;gt;&lt;/p&gt;

&lt;p&gt;taper : hugo new post/my-first-post.md&lt;/p&gt;

&lt;p&gt;try the web site with : hugo server -D&lt;/p&gt;

&lt;p&gt;entrer &lt;a href=&#34;http://localhost:1313/&#34; target=&#34;_blank&#34;&gt;http://localhost:1313/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;generate the web site with : hugo -t &amp;ldquo;academic&amp;rdquo;
Move the content of the folder C:\Users\noyel\Documents\Site\blog\public&lt;/p&gt;

&lt;p&gt;in GitHub\netmemo.github.io lancer github desktop, commit/push to master&lt;/p&gt;

&lt;p&gt;To have a file attached for the post, create a directory with the exact same name as the post md file.&lt;/p&gt;

&lt;p&gt;The language used to write a blog post is Markdown
&lt;a href=&#34;https://www.markdownguide.org/basic-syntax&#34; target=&#34;_blank&#34;&gt;https://www.markdownguide.org/basic-syntax&lt;/a&gt;
&lt;a href=&#34;https://www.tutorialspoint.com/html/html_ascii_codes.htm&#34; target=&#34;_blank&#34;&gt;https://www.tutorialspoint.com/html/html_ascii_codes.htm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bold and underline
&lt;code&gt;**&amp;lt;ins&amp;gt; Cons &amp;lt;/ins&amp;gt;**&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OSPF vs BGP with anycast prefix</title>
      <link>https://netmemo.github.io/post/ospfbgpanycast/</link>
      <pubDate>Tue, 18 Feb 2020 23:45:47 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/ospfbgpanycast/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;ospfbgpanycast.png&#34; alt=&#34;ospf vs bgp anycast&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;issue&#34;&gt;Issue&lt;/h3&gt;

&lt;p&gt;R3 route traffic to R4 instead of R1.
Route 10.10.10.10 toward the WAN is prefered instead of the OSPF LAN DC route.
DC Client that try to reach the DC&amp;rsquo;s 10.10.10.10 address are routed toward the WAN&lt;/p&gt;

&lt;h3 id=&#34;why&#34;&gt;Why&lt;/h3&gt;

&lt;p&gt;R3 is installing in it RIB and redistributing the wrong routes 10.10.10.10 because it does have a better AD 20.&lt;/p&gt;

&lt;h3 id=&#34;workarround&#34;&gt;Workarround&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If we filter the redistribution that doesn&amp;rsquo;t help because when the packet arrive to R3 he will still prefer the BGP route.&lt;/li&gt;
&lt;li&gt;If we drop the prefix on R3 we loose the redundancy&lt;/li&gt;
&lt;li&gt;Increase the AD of the WAN route on R3&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>One of many possible DNS Design (Work in progress)</title>
      <link>https://netmemo.github.io/post/dns-one-design/</link>
      <pubDate>Fri, 04 Oct 2019 23:20:48 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/dns-one-design/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;DNSNetmemo-v2.3.png&#34; alt=&#34;DNS, one of many possible design&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;dns-steps-to-resolve-a-web-site-url-in-ip&#34;&gt;DNS Steps to resolve a web site url in IP :&lt;/h3&gt;

&lt;p&gt;!! The CNAME is normally not allowed at the apex, so I need to find another way) !!
The following steps are when nothing is yet cached in any servers. This use case is for a recusive DNS resolver.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The user try to access www.toto.com from his browser. His computer send the DNS query to the system&amp;#39;s configured DNS Resolver. For instance 9.9.9.9 (quad9).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The recursive (not iterative) DNS resolver send the DNS query to one of the 13 root servers to know how to resovle &amp;ldquo;.com&amp;rdquo; The root servers are know by default by all resolvers.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The root server answer with a referral to the TLD server for &amp;ldquo;.com&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The DNS resolver query the TLD to know who is in charge for resolving &amp;ldquo;toto.com&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The TLD server answer with the glue records configured by the website owner through the registrar portal.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The DNS resolver query Authoritative DNS server of the company for the IP address of &amp;ldquo;www.toto.com&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The Authoritative DNS Server of the company answer with a CNAME of www.gslb.toto.com and the IP address of the GSLB NS in charge of the web site.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The resolver query the GSLB to have the IP address of &amp;ldquo;www.gslb.toto.com&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The GSLB answer with the IP address of the loadbalancer in charge of the IP address of the web site.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The DNS Resolver forward the answer to the user.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The user web browser can directly access the IP address of the web site.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;sub&gt;
1. This blog was mostly inspired from &lt;a href=&#34;https://www.cloudflare.com/learning/dns/dns-server-types/&#34; target=&#34;_blank&#34;&gt;https://www.cloudflare.com/learning/dns/dns-server-types/
&lt;/a&gt;&amp;gt;
&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;
2. This link might help regarding the TTL &lt;a href=&#34;https://www.bortzmeyer.org/forcer-ttl.html&#34; target=&#34;_blank&#34;&gt;https://www.bortzmeyer.org/forcer-ttl.html&lt;/a&gt;
&lt;/sub&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Dns Ttl Cascade (Work in progress)</title>
      <link>https://netmemo.github.io/post/dns-ttl-cascade/</link>
      <pubDate>Fri, 04 Oct 2019 23:15:03 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/dns-ttl-cascade/</guid>
      <description>&lt;p&gt;At every layer, local cache of servers can override the configured TTL even if the TTL override is breaking the RFC&lt;/p&gt;

&lt;p&gt;Cascade of DNS TTL of the wrong information make the information last longer in caches .&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;DNSNetmemo-TTLCascade-v2.3.png&#34; alt=&#34;DNS, TTL Cascade&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dns Outage (Work in progress)</title>
      <link>https://netmemo.github.io/post/dns-outage/</link>
      <pubDate>Sat, 27 Apr 2019 23:06:07 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/dns-outage/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;DNSNetmemo-Outage-v2.3.png&#34; alt=&#34;DNS, outage behavior&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;for-a-short-a-record-ttl&#34;&gt;For a short A record TTL&lt;/h3&gt;

&lt;p&gt;Client keep using A until TTL has expired. If A is 30 second and outage occure just after the DNS request for A record, the outage last 30 seconds.&lt;/p&gt;

&lt;p&gt;Wen A has expired, the client browser query the resolver who might query the GSLB NS of the broken site, wait for the DNS query timeout then query the working GSLB NS that will return the working A record.
As the A TTL is short, the client might experience lots of DNS query timeout (every 30seconds when it will query for the A record to the broken GSLB NS) that might impact the browsing experience and slow it down.&lt;/p&gt;

&lt;h3 id=&#34;for-a-longer-a-record-ttl&#34;&gt;For a longer A record TTL&lt;/h3&gt;

&lt;p&gt;Client keep using A until TTL has expired. If A is 10mn and outage occure just after the DNS request for A, the outage last 10mn.&lt;/p&gt;

&lt;p&gt;When A has expired, the client browser query the resolver who might query the GSLB NS of the broken site for the A record, wait for the DNS query timeout then query the working GSLB NS that will return the working A record.
As the A TTL is long, the initial outage might be up to 10mn but the subsequents DNS request will experience less DNS request timeout toward the broken GSLB IPs. After the potential initial 10mn outage, the browsing experience under GSLB failure might be slightly better. In the end, the GSLB will have less DNS request to handle even during normal operation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;sub&gt;
1. This blog was mostly inspired from &lt;a href=&#34;https://www.cloudflare.com/learning/dns/dns-server-types/&#34; target=&#34;_blank&#34;&gt;https://www.cloudflare.com/learning/dns/dns-server-types/
&lt;/a&gt;&amp;gt;
&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;
2. This link might help regarding the TTL &lt;a href=&#34;https://www.bortzmeyer.org/forcer-ttl.html&#34; target=&#34;_blank&#34;&gt;https://www.bortzmeyer.org/forcer-ttl.html&lt;/a&gt;
&lt;/sub&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>
