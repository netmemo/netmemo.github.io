<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>netmemo.github.io on netmemo.github.io</title>
    <link>https://netmemo.github.io/</link>
    <description>Recent content in netmemo.github.io on netmemo.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>No&amp;euml;l Boul&amp;egrave;ne &amp;copy; 2019. This blog is strictly personnal and opinions expressed here are only mine and doesn&amp;#39;t reflect those of my past, current or futur employers. No warranty whatsoever is made that any of the posts are accurate. There is absolutely no assurance (apart from authorï¿½s professional integrity) that any statement contained in a post is true, correct or precise.</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0200</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Arista basic ISIS-SR</title>
      <link>https://netmemo.github.io/post/aristabasesr/</link>
      <pubDate>Tue, 24 Nov 2020 18:12:05 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/aristabasesr/</guid>
      <description>

&lt;h3 id=&#34;isis-segment-routing-basics-for-arista-eos&#34;&gt;ISIS Segment routing basics for Arista EOS&lt;/h3&gt;

&lt;p&gt;References:&lt;br /&gt;
&lt;a href=&#34;https://www.arista.com/en/um-eos/eos-section-35-3-is-is-segment-routing&#34; target=&#34;_blank&#34;&gt;https://www.arista.com/en/um-eos/eos-section-35-3-is-is-segment-routing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;aristabasesr.png&#34; alt=&#34;arista isis sr&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;srgb&#34;&gt;SRGB&lt;/h4&gt;

&lt;p&gt;Segment Routing Golbal Block&lt;/p&gt;

&lt;h4 id=&#34;prefix-sid&#34;&gt;Prefix-SID&lt;/h4&gt;

&lt;p&gt;It&amp;rsquo;s global and unique. It identify a prefix. It&amp;rsquo;s called anycast SID when it&amp;rsquo;s send by a group of router.&lt;/p&gt;

&lt;h4 id=&#34;node-sid&#34;&gt;Node-SID&lt;/h4&gt;

&lt;p&gt;It&amp;rsquo;s global and unique. Only one per node. It identify the node.&lt;/p&gt;

&lt;h4 id=&#34;adjacent-sid&#34;&gt;Adjacent-SID&lt;/h4&gt;

&lt;p&gt;It&amp;rsquo;s local and can use a dynamique range. It&amp;rsquo;s used to identify an interconnection between 2 nodes.&lt;br /&gt;
With Arista EOS 4.23 it&amp;rsquo;s automaticaly allocated from the isis dynamic range &lt;strong&gt;show mpls label ranges&lt;/strong&gt;.&lt;/p&gt;

&lt;h4 id=&#34;basic-config-for-arista&#34;&gt;Basic config for ARISTA&lt;/h4&gt;

&lt;p&gt;I have added the prefix-sid to test it end to end between the VPC but actually it can work without the prefix-sid. In the next article I will add the L3 VPN on top of SR without using prefix-sid
In bold you find the ISIS-SR specific command require to enable ISIS-SR&lt;/p&gt;

&lt;h5 id=&#34;r1&#34;&gt;R1&lt;/h5&gt;

&lt;pre style=&#34;color:black&#34;&gt;
interface Loopback1
   ip address 1.1.1.1/32
   &lt;b&gt;node-segment ipv4 index 1&lt;/b&gt;
   isis enable ISIS-SR
!

interface Ethernet1
   no switchport
   ip address 10.10.12.1/24
   isis enable ISIS-SR
!
interface Ethernet2
   no switchport
   ip address 10.10.10.1/24
   isis enable ISIS-SR
!
ip routing
!
mpls ip
!

router isis ISIS-SR
   net 10.0000.0010.0100.1001.00
   is-type level-2
   !
   address-family ipv4 unicast
   !
   &lt;b&gt;segment-routing mpls &lt;/b&gt; 
      &lt;b&gt;no shutdown&lt;/b&gt;
      prefix-segment 10.10.10.0/24 index 51
!
&lt;/pre&gt;

&lt;h5 id=&#34;r2&#34;&gt;R2&lt;/h5&gt;

&lt;pre style=&#34;color:black&#34;&gt;
interface Loopback1
   ip address 2.2.2.2/32
   &lt;b&gt;node-segment ipv4 index 2&lt;/b&gt;
   isis enable ISIS-SR
!

interface Ethernet1
   no switchport
   ip address 10.10.12.2/24
   isis enable ISIS-SR
!

interface Ethernet2
   no switchport
   ip address 10.10.23.2/24
   isis enable ISIS-SR
!

ip routing
!
mpls ip
!

router isis ISIS-SR
   net 10.0000.0020.0200.2002.00
   is-type level-2
   !
   address-family ipv4 unicast
   !
   &lt;b&gt;segment-routing mpls&lt;/b&gt;
      &lt;b&gt;no shutdown&lt;/b&gt;
!
&lt;/pre&gt;

&lt;h5 id=&#34;r3&#34;&gt;R3&lt;/h5&gt;

&lt;pre style=&#34;color:black&#34;&gt;
interface Loopback1
   ip address 3.3.3.3/32
   &lt;b&gt;node-segment ipv4 index 3&lt;/b&gt;
   isis enable ISIS-SR
!

interface Ethernet1
   no switchport
   ip address 10.10.23.3/24
   isis enable ISIS-SR
!
interface Ethernet2
   no switchport
   ip address 10.10.30.1/24
   isis enable ISIS-SR
!
ip routing
!
mpls ip
!

router isis ISIS-SR
   net 10.0000.0030.0300.3003.00
   is-type level-2
   !
   address-family ipv4 unicast
   !
   &lt;b&gt;segment-routing mpls&lt;/b&gt;
      &lt;b&gt;no shutdown&lt;/b&gt;
      prefix-segment 10.10.30.0/24 index 53
!
&lt;/pre&gt;

&lt;h3 id=&#34;show-commands&#34;&gt;show commands&lt;/h3&gt;

&lt;pre style=&#34;color:black&#34;&gt;
&lt;b&gt;R1#show isis segment-routing&lt;/b&gt;

System ID: R1                   Instance: ISIS-SR
SR supported Data-plane: MPLS                   SR Router ID: 1.1.1.1
SR Global Block( SRGB ): Base: 900000           Size: 65536           
Adj-SID allocation mode: SR-adjacencies
Adj-SID allocation pool: Base: 100000     Size: 16384

All Prefix Segments have    : P:0 E:0 V:0 L:0
IS-IS Reachability Algorithm : SPF (0)

Number of IS-IS segment routing capable peers: 2

Self-Originated Segment Statistics:
Node-Segments       : 1
Prefix-Segments     : 1
Proxy-Node-Segments : 0
Adjacency Segments  : 1
&lt;/pre&gt;

&lt;pre style=&#34;color:black&#34;&gt;
&lt;b&gt;R1#show mpls segment-routing bindings&lt;/b&gt;

1.1.1.1/32
   Local binding:  Label: imp-null
   Remote binding: Peer ID: 0020.0200.2002, Label: 900001
2.2.2.2/32
   Local binding:  Label: 900002
   Remote binding: Peer ID: 0020.0200.2002, Label: imp-null
3.3.3.3/32
   Local binding:  Label: 900003
   Remote binding: Peer ID: 0020.0200.2002, Label: 900003
10.10.10.0/24
   Local binding:  Label: imp-null
   Remote binding: Peer ID: 0020.0200.2002, Label: 900051
10.10.30.0/24
   Local binding:  Label: 900053
   Remote binding: Peer ID: 0020.0200.2002, Label: 900053
&lt;/pre&gt;

&lt;pre style=&#34;color:black&#34;&gt;
&lt;b&gt;R1#show isis segment-routing prefix-segments&lt;/b&gt;

System ID: 0010.0100.1001                       Instance: &#39;ISIS-SR&#39;
SR supported Data-plane: MPLS                   SR Router ID: 1.1.1.1

Node: 3      Proxy-Node: 0      Prefix: 2       Total Segments: 5

Flag Descriptions: R: Re-advertised, N: Node Segment, P: no-PHP
                   E: Explicit-NULL, V: Value, L: Local
Segment status codes: * - Self originated Prefix, L1 - level 1, L2 - level 2
  Prefix                      SID Type       Flags                   System ID       Level Protection
  ------------------------- ----- ---------- ----------------------- --------------- ----- ----------
* 1.1.1.1/32                    1 Node       R:0 N:1 P:0 E:0 V:0 L:0 0010.0100.1001  L2    unprotected
  2.2.2.2/32                    2 Node       R:0 N:1 P:0 E:0 V:0 L:0 0020.0200.2002  L2    unprotected
  3.3.3.3/32                    3 Node       R:0 N:1 P:0 E:0 V:0 L:0 0030.0300.3003  L2    unprotected
* 10.10.10.0/24                51 Prefix     R:0 N:0 P:0 E:0 V:0 L:0 0010.0100.1001  L2    unprotected
  10.10.30.0/24                53 Prefix     R:0 N:0 P:0 E:0 V:0 L:0 0030.0300.3003  L2    unprotected
&lt;/pre&gt;

&lt;pre style=&#34;color:black&#34;&gt;
&lt;b&gt;R1#show isis segment-routing adjacency-segments&lt;/b&gt;

System ID: R1                   Instance: ISIS-SR
SR supported Data-plane: MPLS                   SR Router ID: 1.1.1.1
Adj-SID allocation mode: SR-adjacencies
Adj-SID allocation pool: Base: 100000     Size: 16384
Adjacency Segment Count: 1
Flag Descriptions: F: Ipv6 address family, B: Backup, V: Value
                   L: Local, S: Set

Segment Status codes: L1 - Level-1 adjacency, L2 - Level-2 adjacency, P2P - Point-to-Point adjacency, LAN - Broadcast adjacency

Locally Originated Adjacency Segments
Adj IP Address  Local Intf     SID   SID Source                 Flags     Type  
--------------- ----------- ------- ------------ --------------------- -------- 
    10.10.12.2         Et1  100000      Dynamic   F:0 B:0 V:1 L:1 S:0   LAN L2  

 Protection 
----------- 
unprotected 
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Bgp Multipath</title>
      <link>https://netmemo.github.io/post/bgp-multipath/</link>
      <pubDate>Mon, 11 May 2020 08:02:21 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/bgp-multipath/</guid>
      <description>

&lt;h3 id=&#34;maximum-path&#34;&gt;Maximum path&lt;/h3&gt;

&lt;p&gt;In the RIB + FIB ECMP (multipath)&lt;/p&gt;

&lt;p&gt;Is PIC supported by default ?&lt;br /&gt;
&lt;a href=&#34;https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_bgp/configuration/xe-3s/irg-xe-3s-book/irg-bgp-mp-pic.html&#34; target=&#34;_blank&#34;&gt;https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_bgp/configuration/xe-3s/irg-xe-3s-book/irg-bgp-mp-pic.html&lt;/a&gt;&lt;br /&gt;
=&amp;gt; With BGP Multipath, the BGP prefix-independant convergence (PIC) feature is supported&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ins&gt; Attribut that should be identical &lt;/ins&gt;&lt;/strong&gt;&lt;br /&gt;
- Weight&lt;br /&gt;
- LP&lt;br /&gt;
- AS Path (AS Number unless relax us used, AS length)&lt;br /&gt;
- Origin Code&lt;br /&gt;
- MED&lt;br /&gt;
- IGP Metric Next hop should be different&lt;/p&gt;

&lt;h3 id=&#34;add-path&#34;&gt;Add Path&lt;/h3&gt;

&lt;p&gt;If the path are equal, allow to advertise more than one bes oath (need to test in eBGP).&lt;br /&gt;
Mostly used with BGP without MPLS. If MPLS is used it&amp;rsquo;s better to have an RD different for each VRF of each router (easier to troubleshoot).&lt;br /&gt;
&lt;a href=&#34;https://orhanergun.net/wp-content/uploads/2019/11/BGP-Add-path-vs-Shadow-RR-vs-Shadow-Session-vs-Unique-RD.pdf&#34; target=&#34;_blank&#34;&gt;https://orhanergun.net/wp-content/uploads/2019/11/BGP-Add-path-vs-Shadow-RR-vs-Shadow-Session-vs-Unique-RD.pdf&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;pic&#34;&gt;PIC&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ciscolive.com/c/dam/r/ciscolive/us/docs/2016/pdf/BRKRST-3321.pdf&#34; target=&#34;_blank&#34;&gt;https://www.ciscolive.com/c/dam/r/ciscolive/us/docs/2016/pdf/BRKRST-3321.pdf&lt;/a&gt;
I don&amp;rsquo;t neded it at the moment because we don&amp;rsquo;t need this level if convergence (couple of minutes vs ms if you have hundres of thousand of prefixes)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.ipspace.net/2012/01/prefix-independent-convergence-pic.html&#34; target=&#34;_blank&#34;&gt;https://blog.ipspace.net/2012/01/prefix-independent-convergence-pic.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The generic optimization of the RIB-to-FIB update process is known as Prefix-Independent Convergence (PIC) - if the routing protocols can pre-compute alternate paths, suitably designed FIB can use that information to cache alternate next hops. Updating such a FIB no longer involves numerous updates to individual prefixes; you have to change only the next hop reachability information.&lt;/p&gt;

&lt;h3 id=&#34;best-external&#34;&gt;Best External&lt;/h3&gt;

&lt;p&gt;Allow a router to advertise it&amp;rsquo;s best external path even if in it&amp;rsquo;s BGP table it does have a beter route from inside&lt;/p&gt;

&lt;h3 id=&#34;label-allocation&#34;&gt;LABEL ALLOCATION&lt;/h3&gt;

&lt;h5 id=&#34;per-vrf&#34;&gt;Per VRF&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;&lt;ins&gt; Cons &lt;/ins&gt;&lt;/strong&gt;&lt;br /&gt;
- IP Lookup needed after label lookup (can be a benefit, cf route sum issue)&lt;br /&gt;
- No granular load balancing because the bottom label is the same for all prefixes, if platform load balances on bottom label&lt;br /&gt;
- Potential forwarding loop during local traffic diversion to support PIC (Transient loop)&lt;br /&gt;
- No support for EIBGP multipath&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ins&gt; Pros &lt;/ins&gt;&lt;/strong&gt;&lt;br /&gt;
- 1 label per vrf (less label used)&lt;/p&gt;

&lt;h5 id=&#34;per-ce&#34;&gt;Per CE&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;&lt;ins&gt; Cons &lt;/ins&gt;&lt;/strong&gt;&lt;br /&gt;
- No granular load balancing because the bottom label is the same for all prefixes from one CE, if platform load balances on bottom label&lt;br /&gt;
- eBGPload balancing &amp;amp; BGP PIC is not supported (it makes usage of label diversity), unless resilient per-ce label&lt;br /&gt;
- Only single hop eBGPsupported, no multihop&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ins&gt; Pros &lt;/ins&gt;&lt;/strong&gt;&lt;br /&gt;
- No IP lookup needed after label lookup&lt;br /&gt;
- Per-CE : one MPLS label per next-hop (so per connected CE router)(Number of MPLS labels used is very low)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to hugo</title>
      <link>https://netmemo.github.io/post/how-to-hugo/</link>
      <pubDate>Mon, 11 May 2020 08:00:11 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/how-to-hugo/</guid>
      <description>&lt;p&gt;prerequis :
 - github desktop
 - hugo&lt;/p&gt;

&lt;p&gt;config.toml =&amp;gt; need to be modify to change the copyright date&lt;/p&gt;

&lt;p&gt;lancer cmd&lt;/p&gt;

&lt;p&gt;Go to the folder blog : C:\Users\noyel\Documents\Site\blog&amp;gt;&lt;/p&gt;

&lt;p&gt;taper : hugo new post/my-first-post.md&lt;/p&gt;

&lt;p&gt;try the web site with : hugo server -D&lt;/p&gt;

&lt;p&gt;entrer &lt;a href=&#34;http://localhost:1313/&#34; target=&#34;_blank&#34;&gt;http://localhost:1313/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;generate the web site with : hugo -t &amp;ldquo;academic&amp;rdquo;
Move the content of the folder C:\Users\noyel\Documents\Site\blog\public&lt;/p&gt;

&lt;p&gt;in GitHub\netmemo.github.io lancer github desktop, commit/push to master&lt;/p&gt;

&lt;p&gt;To have a file attached for the post, create a directory with the exact same name as the post md file.&lt;/p&gt;

&lt;p&gt;The language used to write a blog post is Markdown
&lt;a href=&#34;https://www.markdownguide.org/basic-syntax&#34; target=&#34;_blank&#34;&gt;https://www.markdownguide.org/basic-syntax&lt;/a&gt;
&lt;a href=&#34;https://www.tutorialspoint.com/html/html_ascii_codes.htm&#34; target=&#34;_blank&#34;&gt;https://www.tutorialspoint.com/html/html_ascii_codes.htm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bold and underline
&lt;code&gt;**&amp;lt;ins&amp;gt; Cons &amp;lt;/ins&amp;gt;**&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OSPF vs BGP with anycast prefix</title>
      <link>https://netmemo.github.io/post/ospfbgpanycast/</link>
      <pubDate>Tue, 18 Feb 2020 23:45:47 +0100</pubDate>
      
      <guid>https://netmemo.github.io/post/ospfbgpanycast/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;ospfbgpanycast.png&#34; alt=&#34;ospf vs bgp anycast&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;issue&#34;&gt;Issue&lt;/h3&gt;

&lt;p&gt;R3 route traffic to R4 instead of R1.
Route 10.10.10.10 toward the WAN is prefered instead of the OSPF LAN DC route.
DC Client that try to reach the DC&amp;rsquo;s 10.10.10.10 address are routed toward the WAN&lt;/p&gt;

&lt;h3 id=&#34;why&#34;&gt;Why&lt;/h3&gt;

&lt;p&gt;R3 is installing in it RIB and redistributing the wrong routes 10.10.10.10 because it does have a better AD 20.&lt;/p&gt;

&lt;h3 id=&#34;workarround&#34;&gt;Workarround&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If we filter the redistribution that doesn&amp;rsquo;t help because when the packet arrive to R3 he will still prefer the BGP route.&lt;/li&gt;
&lt;li&gt;If we drop the prefix on R3 we loose the redundancy&lt;/li&gt;
&lt;li&gt;Increase the AD of the WAN route on R3&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>One of many possible DNS Design (Work in progress)</title>
      <link>https://netmemo.github.io/post/dns-one-design/</link>
      <pubDate>Fri, 04 Oct 2019 23:20:48 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/dns-one-design/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;DNSNetmemo-v2.3.png&#34; alt=&#34;DNS, one of many possible design&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;dns-steps-to-resolve-a-web-site-url-in-ip&#34;&gt;DNS Steps to resolve a web site url in IP :&lt;/h3&gt;

&lt;p&gt;!! The CNAME is normally not allowed at the apex, so I need to find another way) !!
The following steps are when nothing is yet cached in any servers. This use case is for a recusive DNS resolver.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The user try to access www.toto.com from his browser. His computer send the DNS query to the system&amp;#39;s configured DNS Resolver. For instance 9.9.9.9 (quad9).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The recursive (not iterative) DNS resolver send the DNS query to one of the 13 root servers to know how to resovle &amp;ldquo;.com&amp;rdquo; The root servers are know by default by all resolvers.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The root server answer with a referral to the TLD server for &amp;ldquo;.com&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The DNS resolver query the TLD to know who is in charge for resolving &amp;ldquo;toto.com&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The TLD server answer with the glue records configured by the website owner through the registrar portal.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The DNS resolver query Authoritative DNS server of the company for the IP address of &amp;ldquo;www.toto.com&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The Authoritative DNS Server of the company answer with a CNAME of www.gslb.toto.com and the IP address of the GSLB NS in charge of the web site.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The resolver query the GSLB to have the IP address of &amp;ldquo;www.gslb.toto.com&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The GSLB answer with the IP address of the loadbalancer in charge of the IP address of the web site.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The DNS Resolver forward the answer to the user.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The user web browser can directly access the IP address of the web site.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;sub&gt;
1. This blog was mostly inspired from &lt;a href=&#34;https://www.cloudflare.com/learning/dns/dns-server-types/&#34; target=&#34;_blank&#34;&gt;https://www.cloudflare.com/learning/dns/dns-server-types/
&lt;/a&gt;&amp;gt;
&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;
2. This link might help regarding the TTL &lt;a href=&#34;https://www.bortzmeyer.org/forcer-ttl.html&#34; target=&#34;_blank&#34;&gt;https://www.bortzmeyer.org/forcer-ttl.html&lt;/a&gt;
&lt;/sub&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Dns Ttl Cascade (Work in progress)</title>
      <link>https://netmemo.github.io/post/dns-ttl-cascade/</link>
      <pubDate>Fri, 04 Oct 2019 23:15:03 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/dns-ttl-cascade/</guid>
      <description>&lt;p&gt;At every layer, local cache of servers can override the configured TTL even if the TTL override is breaking the RFC&lt;/p&gt;

&lt;p&gt;Cascade of DNS TTL of the wrong information make the information last longer in caches .&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;DNSNetmemo-TTLCascade-v2.3.png&#34; alt=&#34;DNS, TTL Cascade&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dns Outage (Work in progress)</title>
      <link>https://netmemo.github.io/post/dns-outage/</link>
      <pubDate>Sat, 27 Apr 2019 23:06:07 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/dns-outage/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;DNSNetmemo-Outage-v2.3.png&#34; alt=&#34;DNS, outage behavior&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;for-a-short-a-record-ttl&#34;&gt;For a short A record TTL&lt;/h3&gt;

&lt;p&gt;Client keep using A until TTL has expired. If A is 30 second and outage occure just after the DNS request for A record, the outage last 30 seconds.&lt;/p&gt;

&lt;p&gt;Wen A has expired, the client browser query the resolver who might query the GSLB NS of the broken site, wait for the DNS query timeout then query the working GSLB NS that will return the working A record.
As the A TTL is short, the client might experience lots of DNS query timeout (every 30seconds when it will query for the A record to the broken GSLB NS) that might impact the browsing experience and slow it down.&lt;/p&gt;

&lt;h3 id=&#34;for-a-longer-a-record-ttl&#34;&gt;For a longer A record TTL&lt;/h3&gt;

&lt;p&gt;Client keep using A until TTL has expired. If A is 10mn and outage occure just after the DNS request for A, the outage last 10mn.&lt;/p&gt;

&lt;p&gt;When A has expired, the client browser query the resolver who might query the GSLB NS of the broken site for the A record, wait for the DNS query timeout then query the working GSLB NS that will return the working A record.
As the A TTL is long, the initial outage might be up to 10mn but the subsequents DNS request will experience less DNS request timeout toward the broken GSLB IPs. After the potential initial 10mn outage, the browsing experience under GSLB failure might be slightly better. In the end, the GSLB will have less DNS request to handle even during normal operation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;sub&gt;
1. This blog was mostly inspired from &lt;a href=&#34;https://www.cloudflare.com/learning/dns/dns-server-types/&#34; target=&#34;_blank&#34;&gt;https://www.cloudflare.com/learning/dns/dns-server-types/
&lt;/a&gt;&amp;gt;
&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;
2. This link might help regarding the TTL &lt;a href=&#34;https://www.bortzmeyer.org/forcer-ttl.html&#34; target=&#34;_blank&#34;&gt;https://www.bortzmeyer.org/forcer-ttl.html&lt;/a&gt;
&lt;/sub&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Core Linux Netmemo</title>
      <link>https://netmemo.github.io/post/corelinuxnetmemo/</link>
      <pubDate>Mon, 22 Oct 2018 15:35:55 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/corelinuxnetmemo/</guid>
      <description>

&lt;p&gt;Below is a very light virtual machine based on Core Linux kernel 4.8 (TinyCore) 26 Mo with network tools like iperf3, tcpdump, net-bridging, iproute2, busybox (httpd), tcpreplay, nmap, openssh.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;corelinux1.5.ova&#34; target=&#34;_blank&#34;&gt;corelinux1.5.ova&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;basic-commands-directory&#34;&gt;basic commands/directory&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/etc/sysconfig/tcedir/optional =&amp;gt; packages
/etc/sysconfig/tcedir/onboot.lst =&amp;gt; on boot package to be loaded
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;sudo vi /opt/eth0.sh =&amp;gt; change interfaces parameters
#configure an interface
pkill udhcp =&amp;gt; stop dhcp for this interface
ifconfig eth1 10.253.106.2 netmask 255.255.255.192 up
route add default gw 10.253.106.1
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;filetool.sh -b =&amp;gt; save the configuration changes
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;vi /opt/hostnameAuto.sh =&amp;gt; change the hostname
vi /opt/bootlocal.sh =&amp;gt; the script that is executed after the device has booted.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>K8s on Vms With Calico</title>
      <link>https://netmemo.github.io/post/k8s-on-vms-with-calico/</link>
      <pubDate>Fri, 05 Oct 2018 23:59:19 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/k8s-on-vms-with-calico/</guid>
      <description>

&lt;p&gt;This post is a memo on how I did the installtion of Kubernetes and Calico on VMs. It&amp;rsquo;s not some best pactrices in anyway.&lt;br /&gt;
I&amp;rsquo;ve chose VM because I didn&amp;rsquo;t want to depend on any Cloud infrastructure. I&amp;rsquo;ve also wanted to understand the network interaction between K8s parts from an infrastructure point of view.&lt;/p&gt;

&lt;h3 id=&#34;prerequisite&#34;&gt;Prerequisite :&lt;/h3&gt;

&lt;p&gt;know how to create VMs on any hypervisors&lt;/p&gt;

&lt;h3 id=&#34;steps-to-deploy-k8s&#34;&gt;Steps to deploy K8s :&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install 1 ubuntu router with 3 interfaces. 1 for NAT/Internet access and 2 for the K8s LAN. I&amp;rsquo;ve created 2 LAN to see what happen under the hood when K8s nodes communicates.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install 3 Ubuntu servers, 1 for the master and 2 for the workers. 1 worker in the same ethernet segment and subnet than the master. 1 worker in another network.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h6 id=&#34;gotchas&#34;&gt;Gotchas:&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;By default, the K8s interface is the one with the default route. All my servers have one OOB interface and one production interface.&lt;/li&gt;
&lt;li&gt;Special tunning for k8s =&amp;gt; turn off the swap&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install runtime and enable it on boot&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Installing kubeadm, kubelet and kubectl&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Initializing the master (choose the pod network add-on before to add the relevent parameters, Calico parameters in my case)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install the pod network add-on&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Join node/workers to the cluster&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;That it, you can now play with the K8s cluster&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;optional&#34;&gt;Optional :&lt;/h3&gt;

&lt;p&gt;Install ctl for calico&lt;/p&gt;

&lt;h3 id=&#34;comments&#34;&gt;Comments :&lt;/h3&gt;

&lt;p&gt;To create anything you just have to kubectl apply -f myfile
The magic happen in myfile where you describe what you want to create.&lt;/p&gt;

&lt;p&gt;Below the capture after the lab is completed
&lt;a href=&#34;cpt-calico-k8s-ipip-raw.cap&#34; target=&#34;_blank&#34;&gt;CaptureCalicok8s&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;details-of-the-tasks&#34;&gt;Details of the tasks&lt;/h3&gt;

&lt;p&gt;3.
&lt;a href=&#34;https://kubernetes.io/docs/setup/independent/install-kubeadm/#installing-runtime&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/docs/setup/independent/install-kubeadm/#installing-runtime&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve needed to add the following commands&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl enable docker.service
systemctl start docker.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4.
&lt;a href=&#34;https://kubernetes.io/docs/setup/independent/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/docs/setup/independent/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get update &amp;amp;amp;&amp;amp;amp; apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
cat &amp;amp;lt;&amp;amp;lt;EOF &amp;amp;gt;/etc/apt/sources.list.d/kubernetes.list
deb http://apt.kubernetes.io/ kubernetes-xenial main
EOF

apt-get update
apt-get install -y kubelet kubeadm kubectl
apt-mark hold kubelet kubeadm kubectl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubeadm init --pod-network-cidr=192.168.0.0/16

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;6.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml
kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;7.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubeadm join 10.0.1.10:6443 --token d34b9i.v03t2yiozio63cq6 --discovery-token-ca-cert-hash sha256:c21d04ea23790a0bf81cf64118e3a9075ffb63ed90bc697acef5793386e9eb16
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Troubleshooting Elam Cisco N7k N5k</title>
      <link>https://netmemo.github.io/post/troubleshooting-elam-cisco-n7k-n5k/</link>
      <pubDate>Thu, 04 Oct 2018 00:48:57 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/troubleshooting-elam-cisco-n7k-n5k/</guid>
      <description>&lt;p&gt;On N7K&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.cisco.com/c/en/us/support/docs/switches/nexus-7000-series-switches/116647-technote-product-00.html&#34; target=&#34;_blank&#34;&gt;https://www.cisco.com/c/en/us/support/docs/switches/nexus-7000-series-switches/116647-technote-product-00.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;=&amp;gt; flanker car avec la commande show hardware internal dev-port-map, il n&amp;rsquo;y a pas d&amp;rsquo;asic Clipper, uniquement des flanker&lt;/p&gt;

&lt;p&gt;Sample of icmp troubleshooting from the Admin VDC&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;show module
attach module 1
show hardware internal dev-port-map
elam asic flanker instance 2
layer2
trigger dbus ipv4 egress if destination-ipv4-address 10.253.108.90
start
status
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;elam asic flanker instance 2
layer2
trigger dbus ipv4 ingress if destination-ipv4-address 10.253.108.90
start
status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On N5K&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.cisco.com/c/en/us/support/docs/switches/nexus-6000-series-switches/118902-technote-nexus-00.html&#34; target=&#34;_blank&#34;&gt;https://www.cisco.com/c/en/us/support/docs/switches/nexus-6000-series-switches/118902-technote-nexus-00.html&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MY-SWITCH# show platform fwm info pif ethernet 2/2 | inc slot_asic
Eth2/2 pd: slot 1  logical port num 1  slot_asic_num 0  global_asic_num 5 fw_inst 4  phy_fw_inst 1 fc 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: The slot numbers are 0-based, whereas the bigsur instances are 1-based. Therefore, in this example slot 1 corresponds to bigsur instance 2.&lt;/p&gt;

&lt;p&gt;=&amp;gt; slot 1 become 2 in the elam command, the instance stay the same as the slot_asic_num
=&amp;gt; ingress for the traffic ingressing the interface, egress for the egressing traffic.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;elam slot 2 asic bigsur instance 0
trigger lu ingress ipv4 if source-ipv4-address_ipv4 10.253.108.226 destination-ipv4-address_ipv4 10.253.108.90
start capture
show elam asic bigsur
show capture lu
stop capture
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>[Cheat Sheet] K8s on VMs with Calico</title>
      <link>https://netmemo.github.io/post/cheat-sheet-k8s-on-vms-with-calico/</link>
      <pubDate>Thu, 04 Oct 2018 00:37:20 +0200</pubDate>
      
      <guid>https://netmemo.github.io/post/cheat-sheet-k8s-on-vms-with-calico/</guid>
      <description>&lt;p&gt;This is the cheat sheet for the post : &lt;a href=&#34;https://netmemo.github.io/post/k8s-on-vms-with-calico/&#34; target=&#34;_blank&#34;&gt;https://netmemo.github.io/post/k8s-on-vms-with-calico/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following post contain raw entry only for reminder purpose.&lt;/p&gt;

&lt;p&gt;Bellow are the links I&amp;rsquo;ve used to understand/did my lab&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://fr.wikipedia.org/wiki/Kubernetes#/media/File:Kubernetes.png&#34; target=&#34;_blank&#34;&gt;https://fr.wikipedia.org/wiki/Kubernetes#/media/File:Kubernetes.png&lt;/a&gt;
&lt;a href=&#34;https://kubernetes.io/docs/setup/independent/install-kubeadm/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/docs/setup/independent/install-kubeadm/&lt;/a&gt;
&lt;a href=&#34;https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/&lt;/a&gt;
&lt;a href=&#34;https://kubernetes.io/docs/tutorials/k8s101/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/docs/tutorials/k8s101/&lt;/a&gt;
&lt;a href=&#34;https://kubernetes.io/docs/tutorials/k8s201/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/docs/tutorials/k8s201/&lt;/a&gt;
&lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/cheatsheet/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/docs/reference/kubectl/cheatsheet/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Join a node/worker to the master&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubeadm join 10.0.1.10:6443 --token d34b9i.v03t2yiozio63cq6 --discovery-token-ca-cert-hash sha256:c21d04ea23790a0bf81cf64118e3a9075ffb63ed90bc697acef5793386e9eb16
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Delete a deployment&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl delete deployment nginx-deployment-nbo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To get the logs of a specific container. -n is to specify the namespace&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl logs calico-node-zxvjv -n kube-system calico-node
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Allow to launch a shell for a specific container&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl exec -it nginx-deployment-nbo-fd57b7b88-l8xsv -- /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a static page in the container to differentiate it from the others.
The -c option is to ask bash to execute the command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl exec -it nginx-deployment-nbo-fd57b7b88-kkw9s -- /bin/bash -c &amp;quot;echo Hello shell demo SRV1 &amp;gt; /usr/share/nginx/html/index.html&amp;quot; 
kubectl exec -it nginx-deployment-nbo-fd57b7b88-kkw9s cat /usr/share/nginx/html/index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To troubleshhot&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;journalctl -r
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Display all pods, even with the system name space, -o wide allow to see the IP addresses&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl get pods --all-namespaces -o wide
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To see the last messages of container associated to the pode&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl describe pod -n kube-system calico-node-zxvjv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Allow to see the node/server/worker ip addresses (-o wide)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo kubectl get node -o wide
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;by default kubernetes don&amp;rsquo;t work with swap, so I needed to disable it with the command swapoff and to comment the swap line in the fstab file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;swapoff

vi /etc/fstab

# /etc/fstab: static file system information.
#
# Use &#39;blkid&#39; to print the universally unique identifier for a
# device; this may be used with UUID= as a more robust way to name devices
# that works even if disks are added and removed. See fstab(5).
#
# /dev/mapper/ubuntu--srv--base--vg-root / ext4 errors=remount-ro 0 1
#/dev/mapper/ubuntu--srv--base--vg-swap_1 none swap sw 0 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Not related to Kubernets but you need to modify the interfaces&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vi /etc/netplan/01-netcfg.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add interfaces to ubuntu&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/etc/netplan/01-netcfg.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This file describes the network interfaces available on your system
For more information, see netplan(5).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;network:
  version: 2
  renderer: networkd
  ethernets:
    enp0s3:
      dhcp4: no
      addresses:
         - 10.0.1.10/24
      routes:
         - to: 0.0.0.0/0
           via: 10.0.1.253
      nameservers:
         addresses: [1.1.1.1]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;apply the /etc/netplan/01-netcfg.yaml configuration&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;netplan apply
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;display ip addresses on interfaces&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ip address show
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;display all interfaces&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ip link show
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;display routes&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;route -n
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In order for Kubernetes to work, you need container runtime to be started&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl enable docker.service
systemctl start docker.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Download calicoctl, to be able to interact with calico with CLI&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo curl -O -L https://github.com/projectcalico/calicoctl/releases/download/v3.2.1/calicoctl
sudo chmod +x calicoctl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To see the state of calico on nodes (BGP,Peer-type,up/down,time)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo calicoctl node status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The following commands allow to export a variables with the IP address and ports of nginx-service previously created and access the content from the host or the container&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export SERVICE_IP=$(kubectl get service nginx-service -o go-template=&#39;{{.spec.clusterIP}}&#39;)
export SERVICE_PORT=$(kubectl get service nginx-service -o go-template=&#39;{{(index .spec.ports 0).port}}&#39;)
wget -qO- http://$SERVICE_IP:$SERVICE_PORT
kubectl run busybox --generator=run-pod/v1 --image=busybox --restart=Never --tty -i --env &amp;quot;SERVICE_IP=$SERVICE_IP&amp;quot; --env &amp;quot;SERVICE_PORT=$SERVICE_PORT&amp;quot;

u@busybox$ wget -qO- http://$SERVICE_IP:$SERVICE_PORT # Run in the busybox container
u@busybox$ exit # Exit the busybox container
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;noel@ubuntu-srv-1:~$ cat nginx-test.yaml

apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nginx-deployment-nbo
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 3 # tells deployment to run 3 pods matching the template
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
      - name: shared-data
        emptyDir: {}
      containers:
      - name: nginx
        image: nginx:1.7.9
        volumeMounts:
        - name: shared-data
          mountPath: /usr/share/nginx/html
        ports:
        - containerPort: 80
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/tutorials/k8s201/&#34; target=&#34;_blank&#34;&gt;https://kubernetes.io/docs/tutorials/k8s201/&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  ports:
  - port: 8000 # the port that this service should serve on
    # the container on each pod to connect to, can be a name
    # (e.g. &#39;www&#39;) or a number (e.g. 80)
    targetPort: 80
    protocol: TCP
  # just like the selector in the deployment,
  # but this time it identifies the set of pods to load balance
  # traffic to.
  selector:
    app: nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These commands are to configure calicoctl in order to work with the local k8s&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export CALICO_DATASTORE_TYPE=kubernetes
export CALICO_KUBECONFIG=~/.kube/config
Pour le root
export CALICO_KUBECONFIG=/home/noel/.kube/config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Move the Calico mode from Always to CrossSubnet.
First we get the calico ippool configuration, then we need to modify the ipipMode in the yaml file and eventually to apply the new configuration&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;calicoctl get ippool -o yaml &amp;gt; ippool.yaml 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Change the mode
    ipipMode: CrossSubnet&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;calicoctl apply -f ippool.yaml
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
